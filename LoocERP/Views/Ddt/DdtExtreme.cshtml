@{
    ViewData["Title"] = "DDT emessi";
//     Layout = "_DevExtremeLayout";
}

<link rel="stylesheet" href="~/theme/plugins/jsgrid/jsgrid.min.css">
<link rel="stylesheet" href="~/theme/plugins/jsgrid/jsgrid-theme.min.css">
<link href="~/theme/plugins/tabulator/css/semantic-ui/tabulator_semantic-ui.min.css" rel="stylesheet">


<!--Export stuff-->
<script type="text/javascript" src="https://oss.sheetjs.com/sheetjs/xlsx.full.min.js"></script>



<div>&nbsp;</div>
<section class="content">
    <div class="row">
        <div class="col-12">
            <div class="card card-primary">
                <!-- /.card-header -->
                <div class="card-body">
                    <div class="col-12">

                        @( Html.DevExtreme().DataGrid<LoocERP.Models.Ddt>()
                            .Selection(s => s.Mode(SelectionMode.Multiple).ShowCheckBoxesMode(GridSelectionShowCheckBoxesMode.Always))
                            .ID("gridContainer")
                            .ShowBorders(true)
                            //.HeaderFilter(headerFilter => headerFilter.Visible(true))
                            .AllowColumnReordering(true)
                            .AllowColumnResizing(true)
                            .ColumnAutoWidth(true)
                            .HoverStateEnabled(true)
                            .Paging(paging => paging.PageSize(10))
                            .Pager(pager => {
                                pager.Visible(true);
                                pager.DisplayMode(GridPagerDisplayMode.Full);
                                pager.ShowPageSizeSelector(true);
                                pager.AllowedPageSizes(new JS("[5, 10, 'all']"));
                                pager.ShowInfo(true);
                                pager.ShowNavigationButtons(true);
                            })                            
                            .FilterRow(filterRow => filterRow
                                .Visible(true)
                                .ApplyFilter(GridApplyFilterMode.Auto)
                            )
                            .SearchPanel(searchPanel => searchPanel
                                .Visible(true)
                                .Width(240)
                                .Placeholder("Cerca...")
                            )
                            .DataSource(ds => ds.Mvc()
                                .Controller("Ddt")
                                .LoadAction("Get")
                                //.DeleteAction("Delete")
                                //.UpdateAction("Put") 
                                .Key("Id")
                            )
                            .RemoteOperations(true)
                            .Columns(columns => {

                                columns.AddFor(m => m.DataDDT).Caption("Data emissione").Format("d/M/yyyy");

                                columns.AddFor(m => m.NumeroProgressivoDocumento).Caption("# Doc.");

                                columns.Add()
                                        .Caption("Tipologia")
                                        .Width(230)
                                        .CalculateCellValue(
                                            @<text>
                                                function(data){
                                                    if (data.Suffisso == null) return '-';
                                                    if (data.Suffisso == 'S') return " DDT di scarico";
                                                    if (data.Suffisso == 'T') return " DDT di trasferimento";
                                                }
                               </text>);
                                        

                                        
                                columns.AddFor(m => m.Mittente.RagioneSociale);

                                columns.AddFor(m => m.NomeDestinatario).HeaderFilter(hf => hf.AllowSearch(false));

                                columns.AddFor(m => m.DataExpDatev).Caption("Data ultima esportazione");

                            })

                        )



                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<style>
    
    #gridContainer .dx-datagrid-headers .dx-header-row {
        background-color: rgb(154 201 255 / 60%);
    }
       
    .dx-header-row {
        color: white;
    }

    #gridContainer .dx-datagrid-headers .dx-header-row {
        background-color: #507CD1;
    }

    #gridContainer .dx-datagrid-header-panel {
        padding: 0;
        background-color: rgb(154 201 255 / 60%);
        border-radius: 5px 5px 0px 0px;
    }

    #gridContainer .dx-datagrid-header-panel .dx-toolbar {
        margin: 0;
        padding-right: 20px;
        background-color: transparent;
    }

    #gridContainer .dx-datagrid-header-panel .dx-toolbar-items-container {
        height: 70px;
    }

    #gridContainer .dx-datagrid-header-panel .dx-toolbar-before .dx-toolbar-item:not(:first-child) {
        background-color: rgba(103, 171, 255, 0.6);
    }

    #gridContainer .dx-datagrid-header-panel .dx-toolbar-before .dx-toolbar-item:last-child {
        padding-right: 10px;
    }

    #gridContainer .dx-datagrid-header-panel .dx-selectbox {
        margin: 17px 10px;
    }

    #gridContainer .dx-datagrid-header-panel .dx-button {
        margin: 17px 0;
    }

    #gridContainer .informer {
        height: 70px;
        width: 130px;
        text-align: center;
        color: #fff;
    }

    #gridContainer .count {
        padding-top: 15px;
        line-height: 27px;
        font-size: 28px;
        margin: 0;
        font-weight: normal;
        font-family: "Helvetica Neue", "Segoe UI", Helvetica, Verdana, sans-serif;
    }

    .form-container {
        padding: 20px;
    }

    â€‹
    .address-form label {
        font-weight: bold;
    }
</style>
@section Scripts{ 
    <script>
        var prevGrid = null;
        function selection_changed(e) {
            /*
            if (prevGrid != null) {
                var key = prevGrid;
                var treeList = $("#gridContainer").dxDataGrid("instance");
                treeList.collapseRow(key);
            }
            */
            

            if (prevGrid != null ) {
                var key = prevGrid;
                var treeList = $("#gridContainer").dxDataGrid("instance");
                treeList.collapseRow(key);
            }
            
            var key = e.selectedRowKeys[0];
            var treeList = $("#gridContainer").dxDataGrid("instance");

           
            if (treeList.isRowExpanded(key)) {
                treeList.collapseRow(key);
            } else {
                treeList.expandRow(key);
            }
            prevGrid = key;
            //$('#mybutton').trigger('click');
        }

    </script>
}