@model Project
@{
    ViewData["Title"] = "Gestione Remote Setup";
    ViewData["activePage"] = "Remote Setup";
}

<link rel="stylesheet" href="~/theme/plugins/jsgrid/jsgrid.min.css">
<link rel="stylesheet" href="~/theme/plugins/jsgrid/jsgrid-theme.min.css">
<link href="~/theme/plugins/tabulator/css/semantic-ui/tabulator_semantic-ui.min.css" rel="stylesheet">
<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-beta.1/dist/css/select2.min.css" rel="stylesheet" />

<!--Export stuff-->
<script type="text/javascript" src="https://oss.sheetjs.com/sheetjs/xlsx.full.min.js"></script>

<section class="content-header">
    <div class="container-fluid">
        
    </div><!-- /.container-fluid -->
</section>

<!-- END CREATE MODAL -->
<section class="content">








    @{
        await Html.RenderPartialAsync("../CommonPartial/_message");
    }
    
    <div class="row">
        <div class="col-12">
            <div class="card card-primary">
                <div class="card-body">
                    <div class="col-12">
                        <div class="col-sm-12">
                            <h3>@ViewData["Title"]</h3>
                        </div>
                        @*
                                    @(Html.DevExtreme().Form<LoocERP.Models.RemoteSetupModel>()
            .Items(items => {
                items.AddGroup().Caption("Group1").Items(groupItems => {

                    groupItems.AddSimpleFor(m => m.Id);

                    groupItems.AddSimpleFor(m => m.IdDevice);

                    groupItems.AddSimpleFor(m => m.ImeiDevice);

                    groupItems.AddSimpleFor(m => m.SetupType);

                    groupItems.AddSimpleFor(m => m.CodiceAutista);

                    groupItems.AddSimpleFor(m => m.NomeAutista);

                    groupItems.AddSimpleFor(m => m.CodiceVettore);

                    groupItems.AddSimpleFor(m => m.Targa);

                    groupItems.AddSimpleFor(m => m.ModelloVettore);

                    groupItems.AddSimpleFor(m => m.CodiceAziendaHr)
                        .Editor(e => e
                            .Lookup()
                            .DataSource(ds => ds.WebApi().Controller("RemoteSetup").LoadAction("C_ANA_CompaniesLookup").Key("Value"))
                            .ValueExpr("Value")
                            .DisplayExpr("Text")
                        );

                    groupItems.AddSimpleFor(m => m.ConnectionType);

                    groupItems.AddSimpleFor(m => m.UriTest);

                    groupItems.AddSimpleFor(m => m.UriProd);

                    groupItems.AddSimpleFor(m => m.Stato);

                    groupItems.AddSimpleFor(m => m.RequestStatus);

                    groupItems.AddSimpleFor(m => m.DeviceModel);

                    groupItems.AddSimpleFor(m => m.CodiceCliente);

                    groupItems.AddSimpleFor(m => m.DataRichiesta);

                    groupItems.AddSimpleFor(m => m.DataLastConnection);

                    groupItems.AddSimpleFor(m => m.RequestLatitude);

                    groupItems.AddSimpleFor(m => m.RequestLongitude);

                    groupItems.AddSimpleFor(m => m.Telefono);

                    groupItems.AddSimpleFor(m => m.StatoAccount);

                    groupItems.AddSimpleFor(m => m.TimeoutAccount);

                    groupItems.AddSimpleFor(m => m.UserId);

                    groupItems.AddSimpleFor(m => m.Provenienza);

                    groupItems.AddSimpleFor(m => m.SimSerialNumber);

                    groupItems.AddSimpleFor(m => m.TelephoneNumber);

                    groupItems.AddSimpleFor(m => m.AlertMessage);

                    groupItems.AddSimpleFor(m => m.PrivacyFlag);

                    groupItems.AddSimpleFor(m => m.LogoAz);

                    groupItems.AddSimpleFor(m => m.MultiTenantId);
                });
            })
        )
                        *@




                        @(Html.DevExtreme().DataGrid<LoocERP.ViewModels.RemoteSetup.RemoteSetupViewModel>()
                            .DataSource(ds => ds.Mvc()
                                .Controller("RemoteSetups")
                                .LoadAction("Get")
                                .UpdateAction("Put")
                                .Key("Id")
                            )
                            .SearchPanel(searchPanel => searchPanel
                                .Visible(true)
                                .Width(240)
                                .Placeholder("Cerca...")
                            )
                            .ID("gridContainer")
                            .FilterRow(f => f.Visible(true))
                            .FilterPanel(f => f.Visible(true))
                            .HeaderFilter(h => h.Visible(true))
                            .RemoteOperations(true)
                            .ShowBorders(true)
                            .ShowRowLines(true)
                            .RowAlternationEnabled(true)
                            .Editing(e => e.Mode(GridEditMode.Popup)
                                .AllowUpdating(true)
                                .AllowAdding(true)
                                .UseIcons(true)

                                .Popup(p => p
                                    .Title("Modifica dispositivo")
                                    .ShowTitle(true)
                                )
                                .Form(f =>
                                f.Items(items =>
                                {
                                    items.AddSimpleFor(m => m.IdDevice);
                                    items.AddSimpleFor(m => m.ImeiDevice);
                                    items.AddSimpleFor(m => m.SetupType);

                                    items.AddSimpleFor(m => m.RequestStatus)
                                        .Editor(e => e
                                        .SelectBox()
                                        .DataSource(new[] {
                                                "Y",
                                                "N",
                                            }
                                        )
                                    );
                                    items.AddSimpleFor(m => m.Telefono);
                                    items.AddSimpleFor(m => m.DataRichiesta).Editor(e => e
                                        .DateBox()
                                        .Width("100%")
                                    )
                                    .IsRequired(false);
                                    items.AddSimpleFor(m => m.CodiceAziendaHr)
                                        .Editor(e => e
                                            .Lookup()
                                            .ValueExpr("Value")
                                            .DisplayExpr("Text")
                                        );

                                    items.AddSimpleFor(m => m.UserId)
                                        .Editor(e => e
                                            .Lookup()
                                            .ValueExpr("Value")
                                            .DisplayExpr("Text")
                                        );


                                    items.AddGroup()
                                        .ColSpan(2)
                                        .CssClass("second-group")
                                        .ColCount(2)
                                        .Items(groupItems => {
                                            groupItems
                                            .AddSimple()
                                            .ColSpan(2)
                                            .Template("<div class=\"dx-fieldset-header col-12\">Dettagli Device</div>");
                                            groupItems.AddSimpleFor(m => m.CodiceVettore);
                                            groupItems.AddSimpleFor(m => m.DeviceDescription).Label(c => c.Text("Descizione Dispositivo"));
                                            groupItems.AddSimpleFor(m => m.DescStatoDeviceDevice)
                                                .Label(c => c.Text("Stato Dispositivo"))
                                                .Editor(e => e
                                                .SelectBox()
                                                .DataSource(new[] {
                                                "Attivo",
                                                "In Manunenzione",
                                                "Fermo",
                                                    }
                                                )
                                            );

                                        });
                                    items.AddGroup()
                                        .ColSpan(2)
                                        .CssClass("second-group")
                                        .ColCount(3)
                                        .Items(groupItems =>
                                        {
                                            groupItems
                                                .AddSimple()
                                                .ColSpan(3)
                                                .Template("<div class=\"dx-fieldset-header col-12\">Dettagli Hardware Device</div>");


                                            groupItems.AddSimpleFor(m => m.DeviceModel).Label(c => c.Text("Modello"));
                                            groupItems.AddSimpleFor(m => m.ODBRead).Label(c => c.Text("Lettura ODB"))
                                                .Editor(e => e
                                                .SelectBox()
                                                .DataSource(new JS("ODBValues"))
                                                .DisplayExpr("name")
                                                .ValueExpr("value")
                                            );
                                            groupItems.AddSimpleFor(m => m.DeviceType).Label(c => c.Text("Tipo"))
                                                .Editor(e => e
                                                .SelectBox()
                                                .DataSource(new JS("DeviceType"))
                                                .DisplayExpr("name")
                                                .ValueExpr("value")
                                            );

                                        });

                                    /*
                                    items.AddSimple()
                                    .ColSpan(2)
                                    .Template("<div class=\"dx-fieldset-header col-12\">Dettagli Hardware Device</div>");
                                    items.AddSimpleFor(m => m.ODBRead).Label(c => c.Text("Lettura ODB"))
                                        .Editor(e => e
                                        .SelectBox()
                                        .DataSource(new JS("ODBValues"))
                                        .DisplayExpr("name")
                                        .ValueExpr("value")
                                    );
                                    items.AddSimpleFor(m => m.DeviceType).Label(c => c.Text("Tipo"))
                                        .Editor(e => e
                                        .SelectBox()
                                        .DataSource(new JS("DeviceType"))
                                        .DisplayExpr("name")
                                        .ValueExpr("value")
                                    );

                                    /*
                                    items.AddSimpleFor(m => m.CodiceMag);

                                    items.AddSimpleFor(m => m.Descrizione);

                                    items.AddSimpleFor(m => m.idUm)
                                        .Editor(e => e
                                            .Lookup()
                                            .DataSource(ds => ds.WebApi().Controller("Articoli").LoadAction("C_UMLookup").Key("Value"))
                                            .ValueExpr("Value")
                                            .DisplayExpr("Text")
                                        );

                                    items.AddSimpleFor(m => m.ScortaMinima);

                                    items.AddSimpleFor(m => m.Qty);

                                    items.AddSimpleFor(m => m.IdMarca)
                                        .Editor(e => e
                                            .Lookup()
                                            .DataSource(ds => ds.WebApi().Controller("Articoli").LoadAction("MARCHELookup").Key("Value"))
                                            .ValueExpr("Value")
                                            .DisplayExpr("Text")
                                        );

                                    items.AddSimpleFor(m => m.IdCategoria);

                                    items.AddSimpleFor(m => m.PrezzoVendita);
                                    */
                                }))
                            )
                            .Columns(columns => {

                                columns.AddFor(m => m.IdDevice);
                                columns.AddFor(m => m.Telefono).Visible(false);


                                columns.AddFor(m => m.ImeiDevice);

                                columns.AddFor(m => m.SetupType);

                                columns.AddFor(m => m.CodiceAutista);

                                columns.AddFor(m => m.NomeAutista);

                                columns.AddFor(m => m.CodiceVettore);

                                columns.AddFor(m => m.CodiceAziendaHr).Lookup(lookup => lookup
                                    .DataSource(ds => ds.WebApi().Controller("RemoteSetups").LoadAction("C_ANA_CompaniesLookup").Key("Value"))
                                    .ValueExpr("Value")
                                    .DisplayExpr("Text")
                                );


                                columns.AddFor(m => m.UserId).Lookup(lookup => lookup
                                    .DataSource(ds => ds.WebApi().Controller("RemoteSetups").LoadAction("UsersLookup").Key("Value"))
                                    .ValueExpr("Value")
                                    .DisplayExpr("Text")
                                );

                                columns.AddFor(m => m.Targa);
                                columns.AddFor(m => m.DataRichiesta).Visible(false);
                                columns.AddFor(m => m.RequestStatus);

                                columns.AddFor(m => m.DeviceDescription).Visible(false);
                                columns.AddFor(m => m.DeviceModel).Visible(false);
                                columns.AddFor(m => m.CodiceAutistaDevice).Visible(false);
                                columns.AddFor(m => m.CodiceVettoreDevice).Visible(false);
                                columns.AddFor(m => m.StatoDeviceDevice).Visible(false);
                                columns.AddFor(m => m.DescStatoDeviceDevice).Visible(false);
                                columns.AddFor(m => m.ODBRead).Visible(false);
                                columns.AddFor(m => m.DeviceType).Visible(false);


                                /*
                                public string? DeviceDescription { get; set; }
        public string? CodiceVettoreDevice { get; set; }
        public string? CodiceClienteDevice { get; set; }
        public string? CodiceAutistaDevice { get; set; }
        public string? StatoDeviceDevice { get; set; }
        public string? DescStatoDeviceDevice { get; set; }
                                */

                            })
                        )
                        @*
            <table id="table" class="table table-bordered table-hover">
            <thead>
                <tr>
                    <th>Codice</th>
                    <th>Nome Operatore</th>
                    <th>Targa</th>
                    <th class="hide-search"></th>
                </tr>
            </thead>
        </table>


                        *@



                    </div>

                </div>
                <!-- /.card-body -->
            </div>
        </div>
    </div>
</section>

<style>
    @*
    #gridContainer .dx-datagrid-headers .dx-header-row {
        background-color: rgb(154 201 255 / 60%);
    }
        *@

    .dx-header-row {
        color: white;
    }

    #gridContainer .dx-datagrid-headers .dx-header-row {
        background-color: #507CD1;
    }

    #gridContainer .dx-datagrid-header-panel {
        padding: 0;
        background-color: rgb(154 201 255 / 60%);
        border-radius: 5px 5px 0px 0px;
    }

    #gridContainer .dx-datagrid-header-panel .dx-toolbar {
        margin: 0;
        padding-right: 20px;
        background-color: transparent;
    }

    #gridContainer .dx-datagrid-header-panel .dx-toolbar-items-container {
        height: 70px;
    }

    #gridContainer .dx-datagrid-header-panel .dx-toolbar-before .dx-toolbar-item:not(:first-child) {
        background-color: rgba(103, 171, 255, 0.6);
    }

    #gridContainer .dx-datagrid-header-panel .dx-toolbar-before .dx-toolbar-item:last-child {
        padding-right: 10px;
    }

    #gridContainer .dx-datagrid-header-panel .dx-selectbox {
        margin: 17px 10px;
    }

    #gridContainer .dx-datagrid-header-panel .dx-button {
        margin: 17px 0;
    }

    #gridContainer .informer {
        height: 70px;
        width: 130px;
        text-align: center;
        color: #fff;
    }

    #gridContainer .count {
        padding-top: 15px;
        line-height: 27px;
        font-size: 28px;
        margin: 0;
        font-weight: normal;
        font-family: "Helvetica Neue", "Segoe UI", Helvetica, Verdana, sans-serif;
    }

    .form-container {
        padding: 20px;
    }


    .address-form label {
        font-weight: bold;
    }
</style>



@section Scripts {
    <script src="~/js/devextreme/localization/dx.messages.it.js"></script>
    <script>
        DevExpress.localization.locale("it");
    </script>
    <script>
        var ODBValues = [
            {
                name: "Sì",
                value: "S"
            },
            {
                name: "No",
                value: "N"
            }
        ];
        var DeviceType = [
            {
                name: "Tracking Device",
                value: "TD"
            },
            {
                name: "Smartphone",
                value: "SM"
            }
        ];

        $("#data_richiesta").datepicker(
            {
                //maxDate: '+1m',
                dateFormat: "dd-MM-yyyy",
                showOn: "button",
                buttonText: '<i class="fa fa-calendar"></i>'
            },
        );

        $("#BtnAggiornaDevice").click(function () {


            var id = $("#idDevice2_form").val();
            var desc = $("#desc_device").val();
            var codVet = $("#cod_vettore").val();
            var codCli = $("#cod_cliente").val();
            var dpSt = $("#DpStatoVettoreMap").val();
            //(string id,string desc, string codVett,string codCli,char stato)  .format(id,desc,codVet,codCli,dpSt)

            $.get(`/RemoteSetup/UpdateMapDevice?id=${id}&desc=${desc}&codVett=${codVet}&codCli=${codCli}&stato=${dpSt}`, function () {
                alert("Utente aggiornato sulla mappa!");

            });



        });
        $("#BtnSalvaCli").click(function () {
            var idDevice = $("#idDevice_form").val();
            var imeiDevice = $("#imei_form").val();
            var setupType = $("#SetupType_form").val();
            var telefono = $("#telefono_form").val();
            var codiceVettore = $("#idDevice_form").val();
            var autista = $("#nome_autista").val();
            var dataRichiesta = $("#data_richiesta").val();
            var azienda = $("#azienda_form").val();
            var id = $("#id_form").val();


            console.log(autista);


            $.get(`/RemoteSetup/update?id=${id}&azienda=${azienda}&dataRichiesta=${dataRichiesta}&idDevice=${idDevice}&imeiDevice=${imeiDevice}&setupType=${setupType}&telefono=${telefono}&codiceVettore=${codiceVettore}&autista=${autista}`, function () {
                $("#alert_save").hidden(true);

            });

        });




        /*
         * id cognome nome (su mappa)
         * mettere nome nello stato
         *
         *
         * p = In attesa di autorizzazione
         * n = bloccato
         * y = autorizzato
         *
         */

        var remoteSetup = [];

        function openModal(id) {
            $.get("/Users/ajaxIndex", function (result) {
                console.log(result);
                var sel = null;
                for (var k = 0; k < remoteSetup.length; k++) {
                    if (remoteSetup[k].id == id) {
                        sel = remoteSetup[k];
                    }
                }
                console.log(sel);



                $("#idDevice_form").val(sel.idDevice);
                $("#idDevice2_form").val(sel.idDevice);
                $("#imei_form").val(sel.imeiDevice);
                $("#SetupType_form").val(sel.setupType);
                $("#telefono_form").val(sel.telefono);
                $("#desc_device").val(sel.description);
                $("#cod_vettore").val(sel.codiceVettore);
                $("#cod_cliente").val(sel.codiceCliente);
                $("#id_form").val(sel.id);

                var date = new Date(Date.parse(sel.dataRichiesta));
                const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date);
                const mo = new Intl.DateTimeFormat('it', { month: '2-digit' }).format(date);
                const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date);

                $("#data_richiesta").val(`${mo}/${da}/${ye}`);
                $("#azienda_form").val(sel.codiceAzienda);



                $("#DpStatoVettoreMap").val(sel.statoDevice);
                for (var k = 0; k < result.data.length; k++) {

                    var u = result.data[k];
                    if (sel.telefono == u.phoneNumber) {
                        $("#nome_autista").append(`<option selected="true" value="">${u.firstName} ${u.lastName} (${u.phoneNumber})</option>`);
                    } else {
                        $("#nome_autista").append(`<option value="${u.id}">${u.firstName} ${u.lastName} (${u.phoneNumber})</option>`);
                    }

                }
                $('#nome_autista').select2({
                });


                $("#empModal").modal('show');

            });






        }


        $(document).ready(function () {


            $('#table thead tr').clone(true).appendTo('#table thead');
            $('#table thead tr:eq(1) th').each(function (i) {
                var title = $(this).text();
                if (!$(this).hasClass("hide-search")) {
                    $(this).html('<input type="text" placeholder="Cerca ' + title + '" />');
                    $('input', this).on('keyup change', function () {
                        if (table.column(i).search() !== this.value) {
                            table
                                .column(i)
                                .search(this.value)
                                .draw();
                        }
                    });
                }
            });

            $.get("/RemoteSetup/ajaxIndex", function (result) {
                remoteSetup = result.data;
                console.log(result);
                var table = $('#table').DataTable({
                    data: result.data,
                    dom: 'Bfrtip',//dom: 'Bftp',
                    buttons: [
                        'copyHtml5',
                        'excelHtml5',
                        'csvHtml5',
                        'pdfHtml5'
                    ],
                    "columns": [
                        { "data": "idDevice" },
                        { "data": "nomeAutista" },
                        { "data": "targa" },
                        {
                            "data": null,
                            "name": "",
                            "render": function (data, type, row) {

                                return '<span>' +
                                    '<a class="btn-sm" onclick="openModal(' + row.id + ')"><i class="fa fa-eye"></i></a>' +
                                    '</span>';
                            }
                        },
                    ],
                    columnDefs: [
                        { width: '30px', targets: 0 },
                        //    { width: '30px', targets: 5 }
                    ],
                    "language": {
                        "sEmptyTable": "Nessun dato presente nella tabella",
                        "sInfo": "Vista da _START_ a _END_ di _TOTAL_ elementi",
                        "sInfoEmpty": "Vista da 0 a 0 di 0 elementi",
                        "sInfoFiltered": "(filtrati da _MAX_ elementi totali)",
                        "sInfoPostFix": "",
                        "sInfoThousands": ".",
                        "sLengthMenu": "Visualizza _MENU_ elementi",
                        "sLoadingRecords": "Caricamento...",
                        "sProcessing": "Elaborazione...",
                        "sSearch": "Cerca:",
                        "sZeroRecords": "La ricerca non ha portato alcun risultato.",
                        "oPaginate": {
                            "sFirst": "Inizio",
                            "sPrevious": "Precedente",
                            "sNext": "Successivo",
                            "sLast": "Fine"
                        },
                        "oAria": {
                            "sSortAscending": ": attiva per ordinare la colonna in ordine crescente",
                            "sSortDescending": ": attiva per ordinare la colonna in ordine decrescente"
                        }
                    },
                    "autoWidth": false,
                    "responsive": true,
                    orderCellsTop: true,
                    fixedHeader: true
                });

            });


        });
    </script>
}
<style>
    .select2-selection {
        height: 36px;
    }
</style>