@model LoocERP.ViewModels.EditRoleViewModel
@{
    ViewData["Title"] = "Aggiorna permessi";
}

<link rel="stylesheet" href="~/theme/plugins/jsgrid/jsgrid.min.css">
<link rel="stylesheet" href="~/theme/plugins/jsgrid/jsgrid-theme.min.css">
<link href="~/theme/plugins/tabulator/css/semantic-ui/tabulator_semantic-ui.min.css" rel="stylesheet">


<!--Export stuff-->
<script type="text/javascript" src="https://oss.sheetjs.com/sheetjs/xlsx.full.min.js"></script>




<section class="content-header">
        <div class="card card-primary">
            <div class="card-body">
                <div class="col-12 p-0">
                            <a class="btn-sm" asp-controller="roles" asp-action="Index"><i class="fa fa-chevron-circle-left"></i> Torna ai <b>Ruoli</b></a>
                </div>
            </div>
        </div>
<!-- /.container-fluid -->
</section>

<section class="content">
    <form method="post" id="formClaims">
        <input type="hidden" asp-for="@Model.RoleId" />
        <div class="card card-primary">
            <div class="card-header">
                <div class="float-left">
                    <h3 class="card-title">
                        Gestione permessi del ruolo: <b>@Model.Title</b>
                    </h3>
                </div>
                
            </div>
            <div class="card-body">

                <table id="example" class="table table-bordered table-hover">
                    <thead>
                        <tr>
                            <th hidden>So</th>
                            <th>Titolo</th>
                            <th>Descrizione</th>
                            <th class="hide-search ">Abilitato</th>
                        </tr>
                    </thead>
                    <tbody>

                        @for (int i = 0; i < Model.Claims.Count; i++)
                        {
                            <tr>
                                <td hidden>
                                    <input asp-for="@Model.Claims[i].ClaimTitle" />
                                    <input asp-for="@Model.Claims[i].ClaimDescription" />
                                    <input asp-for="@Model.Claims[i].ClaimType" />
                                </td>
                                <td>
                                    <label class="form-check-label" asp-for="@Model.Claims[i].IsSelected">
                                        @Model.Claims[i].ClaimTitle
                                    </label>
                                </td>

                                <td>
                                    <label class="form-check-label" asp-for="@Model.Claims[i].IsSelected">
                                        @Model.Claims[i].ClaimDescription
                                    </label>
                                </td>
                                <td>
                                    <input asp-for="@Model.Claims[i].IsSelected" class="checkbox_claim"/>
                                </td>
                            </tr>
                        }

                    </tbody>
                    
                </table>

                <div asp-validation-summary="All" class="text-danger"></div>
            </div>
            <div class="card-footer">
                <div class="float-right">
                    <input type="submit" value="Salva" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </form>
</section>






    @section Scripts {
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.5/jspdf.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/2.3.2/jspdf.plugin.autotable.js"></script>
        <script>




            $(document).ready(function () {

                /*
                $("#formClaims").submit(function (e) {

                    e.preventDefault(); // avoid to execute the actual submit of the form.


                    $('#example').DataTable().search('')
                        .draw();



                    
                    var form = $(this);
                    var url = form.attr('action');

                    $.ajax({
                        type: "POST",
                        url: url,
                        data: form.serialize(), // serializes the form's elements.
                        success: function (data) {
                            window.location.href = "/roles";
                        }
                    });
                    

                });
                */



            $('#example thead tr').clone(true).appendTo( '#example thead' );
            $('#example thead tr:eq(1) th').each( function (i) {
                var title = $(this).text();
                if (!$(this).hasClass("hide-search")) {
                    $(this).html('<input type="text" placeholder="Search ' + title + '" />');

                    $('input', this).on('keyup change', function () {
                        if (table.column(i).search() !== this.value) {
                            table
                                .column(i)
                                .search(this.value)
                                .draw();
                        }
                    });
                } else {
                    $(this).html('');
                }
                
            } );

                var table = $('#example').DataTable({
                    dom: 'Bfrtip',
                "language": {
                    "sEmptyTable": "Nessun dato presente nella tabella",
                    "sInfo": "Vista da _START_ a _END_ di _TOTAL_ elementi",
                    "sInfoEmpty": "Vista da 0 a 0 di 0 elementi",
                    "sInfoFiltered": "(filtrati da _MAX_ elementi totali)",
                    "sInfoPostFix": "",
                    "sInfoThousands": ".",
                    "sLengthMenu": "Visualizza _MENU_ elementi",
                    "sLoadingRecords": "Caricamento...",
                    "sProcessing": "Elaborazione...",
                    "sSearch": "Cerca:",
                    "sZeroRecords": "La ricerca non ha portato alcun risultato.",
                    "oPaginate": {
                        "sFirst": "Inizio",
                        "sPrevious": "Precedente",
                        "sNext": "Successivo",
                        "sLast": "Fine"
                    },
                    "oAria": {
                        "sSortAscending": ": attiva per ordinare la colonna in ordine crescente",
                        "sSortDescending": ": attiva per ordinare la colonna in ordine decrescente"
                    }
                },
                buttons: [
                    {
                        text: 'Seleziona tutto',
                        action: function (e, dt, node, config) {
                            $(".checkbox_claim").prop("checked", 1);
                        }
                    },
                    {
                        text: 'Deseleziona tutto',
                        action: function (e, dt, node, config) {
                            $(".checkbox_claim").prop("checked", 0);
                        }
                    }
                ],
                "autoWidth": false,
                "responsive": true,
                "paging": false
            });
        });
        </script>
    }
    <style>
        .tabulator, .tabulator-header, .tabulator-tableHolder {
            overflow: visible !important;
        }

        .menu--expanded {
            animation-name: menuAnimation;
            animation-duration: 0.2s;
            animation-timing-function: linear;
        }

        .menu__contents--expanded {
            animation-name: menuContentsAnimation;
            animation-duration: 0.2s;
            animation-timing-function: linear;
        }
    </style>
