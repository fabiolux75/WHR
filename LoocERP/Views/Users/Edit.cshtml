@model LoocERP.ViewModels.EditUserViewModel
@using Microsoft.AspNetCore.Identity
@using LoocERP.Models

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@inject RoleManager<IdentityRole> roleManager
@{
    ViewBag.Title = "Profilo";
    if (ViewBag.type < 3)
    {
        ViewBag.Title = "Profilo Risorsa Interna";
        ViewBag.Esterni = "Utenti Interni";
    } else if (ViewBag.type >= 3)
    {
        ViewBag.Title = "Profilo Risorsa Esterna";
        ViewBag.Esterni = "Utenti Esterni";
    }
}

@*To support file upload set the form element enctype="multipart/form-data" *@

<div>&nbsp;</div>
<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-md-3">
                <div class="card col-12 p-0">
                    <div class="card-body">
                        <a class="btn-sm" asp-controller="Users" asp-action="Index" asp-route-type=@ViewBag.type><i class="fa fa-chevron-circle-left"></i> Torna agli <b>@ViewBag.Esterni</b></a>
                    </div>
                </div>
                <!-- Profile Image -->

                <div class="card card-primary card-outline">
                    @if (@Model.User !=null && @Model.User.Company != null)
                    {
                       <div class="col-12 text-center bg-info"><h5>@Model.User.Company.RagioneSociale</h5></div>
                    }

                    <div class="card-body box-profile">
                        <div class="text-center">
                            <img class="profile-user-img img-fluid" style="border: none"
                                 src='@Url.Action("getProfilePicture", "Users",new { id = @UserManager.FindByIdAsync(Model.User.Id).Result.Id,v=@UserManager.FindByIdAsync(Model.User.Id).Result.DataModifica})'
                                 alt="User profile picture">
                        </div>

                        <h3 class="profile-username text-center"> @UserManager.FindByIdAsync(Model.User.Id).Result.FirstName  @UserManager.FindByIdAsync(Model.User.Id).Result.LastName</h3>


                    </div>
                    @{
                        await Html.RenderPartialAsync("_edit_image", @Model);
                        await Html.RenderPartialAsync("_edit_password", @Model);
                    }
                    <!-- /.card-body -->
                </div>

                <!-- /.card -->
                <!-- About Me Box -->
                <div class="card card-primary">
                    <div class="card-header">
                        <h3 class="card-title">Informazioni</h3>
                    </div>
                    <!-- /.card-header -->
                    <div class="card-body">
                        <div class="row">
                            <div class="col">
                                <strong><i class="far fa-file-alt mr-1"></i> Ruoli</strong>
                            </div>
                            <div class="col">
                                <a class="float-right" href="#" id="edit-roles"><i class="fa fa-edit"></i></a>
                            </div>
                        </div>

                        @if (true){
                        <p class="text-muted">
                            @foreach (var c in Model.Roles)
                            {
                            <span class="badge badge-info">
                                @Html.Raw(c)
                            </span>
                            }
                        </p>
                        <div class="row" id="change-role">
                            <form enctype="multipart/form-data" asp-controller="Users" asp-action="assignRole"
                                  method="post" class="mt-3">
                                <input hidden name="id" value="@Model.User.Id" />
                                <div class="form-group col">
                                    <select class="selectpicker" multiple data-live-search="true" name="ruoli">
                                        <option></option>
                                        @foreach (var r in roleManager.Roles)
                                        {
                                        @if (Model.Roles.Contains(r.Name))
                                            {
                                        <option selected>@r.Name</option>
                                            }
                                            else
                                            {
                                        <option>@r.Name</option>
                                            }

                                        }
                                    </select>
                                </div>
                                <div class="col">
                                    <button type="submit" class="btn btn-primary">Modifica</button>
                                </div>
                            </form>
                        </div>
                        }
                    </div>
                    <!-- /.card-body -->
                </div>
                <!-- /.card -->
            </div>
            <!-- /.col -->
            <div class="col-md-9">                
                <div class="card">
                    <div class="tab" style="border:0">
                        <button class="tablinks active" onclick="openTab(event, 'Profilo')">Profilo</button>
                        <button class="tablinks" onclick="openTab(event, 'LogisticInfo')">Logistica Info</button>
                        <button class="tablinks" onclick="openTab(event, 'Documents')">Doc Personali</button>
                        <button class="tablinks" onclick="openTab(event, 'TitoliStudio')">Titoli di Studio</button>
                        <button class="tablinks" onclick="openTab(event, 'ContractUser')">Contratti utente</button>
                        <button class="tablinks" onclick="openTab(event, 'CorsiSpecializzazioniUser')">Corsi/Specializzazioni</button>
                        <button class="tablinks" onclick="openTab(event, 'MansioniUser')">Mansioni</button>
                        <button class="tablinks" onclick="openTab(event, 'MalattiaUser')">Malattie</button>
                        <button class="tablinks" onclick="openTab(event, 'AltreInformazioni')">Altre Informazioni</button>

                    </div>                    
                    <!-- /.card-header -->
                    <div class="card-body">
                        <div class="tab-content">
                            <div id="Profilo" class="tabcontent">
                                @{
                                    await Html.RenderPartialAsync("_edit_profile", @Model);
                                }
                            </div>
                            <div id="LogisticInfo" class="tabcontent">
                                @{
                                    await Html.RenderPartialAsync("_edit_looc", @Model);
                                }
                            </div>
                            <div id="Documents" class="tabcontent">
                                @{
                                    await Html.RenderPartialAsync("_edit_document", @Model.DocumentViewModel);
                                }
                            </div>
                            <div id="TitoliStudio" class="tabcontent">
                                @{
                                    await Html.RenderPartialAsync("_edit_titolo_studio", @Model.DocumentViewModel);
                                }
                            </div>
                            <div id="ContractUser" class="tabcontent">
                                @{
                                    await Html.RenderPartialAsync("_edit_contract_user");
                                }
                            </div>
                            <div id="CorsiSpecializzazioniUser" class="tabcontent">
                                @{
                                    await Html.RenderPartialAsync("_edit_corsi_specializzazioni_user");
                                }
                            </div>
                            <div id="MalattiaUser" class="tabcontent">
                                @{
                                    await Html.RenderPartialAsync("_edit_malattia_user");
                                }
                            </div>
                            <div id="AltreInformazioni" class="tabcontent">
                                @{
                                    await Html.RenderPartialAsync("_edit_altreinformazioni", @Model);
                                }
                            </div>
                            <div id="MansioniUser" class="tabcontent">
                                @{
                                    await Html.RenderPartialAsync("_edit_mansioni_user", @Model);
                                }
                            </div>
                            <!-- /.tab-pane -->
                        </div>
                        <!-- /.tab-content -->
                    </div><!-- /.card-body -->
                </div>
                <!-- /.nav-tabs-custom -->
            </div>
            <!-- /.col -->
        </div>
        <!-- /.row -->
    </div><!-- /.container-fluid -->
</section>
<!-- /.content -->
<!-- /.content-wrapper -->
@section Scripts {


    <script>
        function openTab(evt, tabName) {
            // Declare all variables
            var i, tabcontent, tablinks;

            // Get all elements with class="tabcontent" and hide them
            tabcontent = document.getElementsByClassName("tabcontent");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }

            // Get all elements with class="tablinks" and remove the class "active"
            tablinks = document.getElementsByClassName("tablinks");
            if (event != null) {
                for (i = 0; i < tablinks.length; i++) {
                    tablinks[i].className = tablinks[i].className.replace(" active", "");
                }

                // Show the current tab, and add an "active" class to the button that opened the tab
                evt.currentTarget.className += " active";
            }
            document.getElementById(tabName).style.display = "block";
        }

        function openContractUser() {
            console.log("contract-user-area");
            // AJAX request
            $.ajax({
                url: '/ContractUser',
                type: 'get',
                dataType : 'html',
                data: {
                        userId: "@Model.User.Id",
                        redirectUrl: "/Users/Edit?id=@Model.User.Id&isEmployee=1&type=@ViewBag.type",
                      },
                success: function (data) {
                    //console.log(data);
                    $('#contract-user-area').html(data);
                }
            });
        }

        function openDocumentPersonali() {
            //console.log("openDocumentPersonali");
            // AJAX request
            $.ajax({
                url: '/Document',
                type: 'get',
                dataType : 'html',
                data: {
                        tipo: "document_profile",
                        DocumentGroup: 1,
                        userId: "@Model.User.Id",
                        redirectUrl: "/Users/Edit?id=@Model.User.Id&isEmployee=1&type=@ViewBag.type",
                      },
                success: function (data) {
                    //console.log(data);
                    $('#document-edit-area').html(data);
                }
            });
        }
        function openDocumentTitoliStudio() {
            //console.log("openDocumentContratti");
            // AJAX request
            $.ajax({
                url: '/Document',
                type: 'get',
                dataType : 'html',
                data: {
                        tipo: "document_titolo_studio",
                        DocumentGroup: 2,
                        userId: "@Model.User.Id",
                        redirectUrl: "/Users/Edit?id=@Model.User.Id&isEmployee=1&type=@ViewBag.type",
                      },
                success: function (data) {
                    //console.log(data);
                    $('#document-edit-titoli-studio').html(data);
                }
            });
        }
        function openSpecializzazioniUser() {
            console.log("openSpecializzazioniUser");
            // AJAX request
            $.ajax({
                url: '/RelSpecializzazioneUser',
                type: 'get',
                dataType : 'html',
                data: {
                        userId: "@Model.User.Id",
                        redirectUrl: "/Users/Edit?id=@Model.User.Id&isEmployee=1&type=@ViewBag.type",
                      },
                success: function (data) {
                    console.log(data);
                    //$('#document-edit-titoli-studio').html(data);
                    $('#corsi-specializzazione-user-area').html(data);
                }
            });
        }
        function openMalattiaUser() {
            // AJAX request
            $.ajax({
                url: '/MalattiaUser',
                type: 'get',
                dataType : 'html',
                data: {
                        userId: "@Model.User.Id",
                        redirectUrl: "/Users/Edit?id=@Model.User.Id&isEmployee=1&type=@ViewBag.type",
                      },
                success: function (data) {
                    console.log(data);
                    //$('#document-edit-titoli-studio').html(data);
                    $('#contract-user-malattia').html(data);
                }
            });
        }
        function openMansioniUser() {
            console.log("openMansioniUser");
            // AJAX request
            $.ajax({
                url: '/RelMansioneUser',
                type: 'get',
                dataType : 'html',
                data: {
                    userId: "@Model.User.Id",
                    redirectUrl: "/Users/Edit?id=@Model.User.Id&isEmployee=1&type=@ViewBag.type",
                      },
                success: function (data) {
                    console.log(data);
                    //$('#document-edit-titoli-studio').html(data);
                    $('#mansione-user-area').html(data);
                }
            });
        }
    </script>
    <script>
        var show = false;
        $(document).ready(function () {
            openTab(event, 'Profilo');
            openDocumentPersonali();
            openDocumentTitoliStudio();
            openContractUser();
            openSpecializzazioniUser();
            openMalattiaUser();
            openMansioniUser();

            $('.custom-file-input').on("change", function () {
                var fileName = $(this).val().split("\\").pop();
                $(this).next('.custom-file-label').html(fileName);
            });
            $('#edit-roles').click(function (e) {
                if (show) {
                    $('#edit-roles').html("<i class=\"fa fa-edit\"></i>");
                    $('#change-role').hide();
                } else {
                    $('#edit-roles').html("<i class=\"fa fa-times\"></i>");
                    $('#change-role').show();
                }
                show = !show;
            });
            $('#change-role').hide();
        });
    </script>
}




<!-- Latest compiled and minified JavaScript -->
