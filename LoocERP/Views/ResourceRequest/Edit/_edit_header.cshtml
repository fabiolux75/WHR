@model LoocERP.Models.ResourceRequest
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@{
    var permitted = ((await AuthorizationService.AuthorizeAsync(User, "ResourceRequest.Assignment")).Succeeded);
}
@{
    DateTime today = DateTime.Now.Date;
    string todaystring = @today.Year + "-" + @today.Month.ToString("0#") + "-" + @today.Day.ToString("0#");
    if (Model.WorkDate != null)
    {
        todaystring = Model.WorkDate.Value.Year + "-" + Model.WorkDate.Value.Month.ToString("0#") + "-" + Model.WorkDate.Value.Day.ToString("0#");
    }
    var mansioni = Model.dettagli.Where(c => c.MansioneId != null).ToList();
    var specializzazioni = Model.dettagli.Where(c => c.SpecializzazioneId != null).ToList();
}
<div class="card col-12 p-0">
    <div class="card-body">
        <a class="btn-sm" href="/resourcerequest">
            <i class="fa fa-chevron-circle-left" aria-hidden="true"></i> Torna alla lista delle <b>RICHIESTE</b>
        </a>
    </div>
</div>
<div class="card card-primary">
    <div class="card-body">
        <div class="col-12">
            <div class="row">
                <div class="col-12 col-sm-4">
                    <div class="row">
                        <div class="col-6 form-group">
                            <label>Richiesta dal:</label>
                            <div class="col-xs-12">
                                <div class="input-group">
                                    <div class="form-group col-12">
                                        <input type="date" value="@todaystring" id="dateSearch" data-date="" data-date-format="DD-MM-YYYY" class="form-control" name="EndDate" placeholder="Data di consegna" required>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-6 form-group">
                            <label>Nome richiesta : </label>
                            <div class="col-xs-12">
                                <div class="input-group">
                                    <div class="form-group col-12">
                                        <input type="text" id="request_name" class="form-control" value="@Model.Descr" required>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    @{
                        await Html.RenderPartialAsync("Edit/_edit_header_selectturno", @Model);
                    }
                </div>

                <div id="charts" class="col-12 col-sm-8">
                    <div class="col-12">
                        <div class="row" id="chartsList">
                            <div class="col-6 col-md-4 text-center">
                                Richieste totali :<br>
                                <label id="totRichieste" style="font-size: 50px;">0</label>
                            </div>
                            <div class="col-6 col-md-4 text-center">
                                <input type="text" class="knob" value="0" data-width="90" data-height="90" data-fgColor="#3c8dbc"
                                       data-readonly="true"
                                       id="mansioniId_rep">
                                <div class="knob-label">Richieste di mansioni</div>
                            </div>
                            <div class="col-6 col-md-4 text-center">
                                <input type="text" class="knob" value="0" data-width="90" data-height="90" data-fgColor="#3c8dbc"
                                       data-readonly="true"
                                       id="specilizzazioniId_rep">
                                <div class="knob-label">Richieste di specializzazioni</div>
                            </div>
                        </div>
                    </div>
                    <div class="col-12">
                        <center>
                            <div>&nbsp;</div>
                            @if (Model.Stato == StatoRequest.bozza || Model.Stato == null)
                            {
                                <a class="btn btn-primary waves-effect waves-light" onclick="sendBozza()">Salva come <b>Bozza </b><i class="far fa-save"></i></a>
                                <a class="btn btn-primary waves-effect waves-light" onclick="sendRequest()">Invia <b>Richiesta </b><i class="far fa-paper-plane"></i></a>
                            }
                            @if (Model.Stato == StatoRequest.inviata && permitted)
                            {
                                <a class="btn btn-primary waves-effect waves-light" onclick="setStato('@Model.Id',2)">Prendi in <b>Carico </b><i class="far fa-hand-pointer"></i></a>
                            }

                            @if (Model.Stato == StatoRequest.inCarico && permitted)
                            {
                                <a class="btn btn-primary waves-effect waves-light" onclick="setStato('@Model.Id',3)">Segnala come <b>Completata </b><i class="fas fa-check"></i></a>
                            }
                        </center>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/theme/plugins/jquery-knob/jquery.knob.min.js"></script>
<script>

    function setStato(id, stato) {
        $.ajax({
            url: '/resourcerequest/ajaxSetStato?Id=' + id + "&stato="+stato,
            type: 'get',
            success: function (data) {
                window.location.href = "/resourcerequest/edit?id=" + id;
            }
        });
    }


    var mansioniReqs = @mansioni.Count;
    var specReqs = @specializzazioni.Count;



    function objectifyForm(formArray) {
        //serialize data function
        var returnArray = {};
        for (var i = 0; i < formArray.length; i++) {
            returnArray[formArray[i]['name']] = formArray[i]['value'];
        }
        return returnArray;
    }


    var sending = false;

    function sendBozza() {


        if (sending) return;

        sending = true;


        var tmp = [];
        var num = 0;

        var arrName = "request.dettagli";

        if ($("#request_name").val() == null || $("#request_name").val() == "") {
            return;
        }

        if ($("#turno_select").val() == null || $("#turno_select").val() == "") {
            return;
        }


        for (k = 0; k < $("#mansioni-list .element").length; k++) {
            var idM = $($("#mansioni-list .element")[k]).find(".Id_request").val();
            var idMIndex = arrName + "[" + num + "].Id";
            var mId = $($("#mansioni-list .element")[k]).find(".MansioneId").val();
            var mIDIndex = arrName + "[" + num + "].MansioneId";
            var qty = $($("#mansioni-list .element")[k]).find(".qty").val();
            var qtyIndex = arrName + "[" + num + "].qty";
            var macchina = $($("#mansioni-list .element")[k]).find(".MacchinaId").val();
            var macchinaIndex = arrName + "[" + num + "].MacchinaId";


            if (idM != null) {
                tmp.push(
                    {
                        value: idM,
                        name: idMIndex,
                    }
                );
            }

            tmp.push(
                {
                    name: mIDIndex,
                    value: mId,
                }
            );
            tmp.push(
                {
                    name: qtyIndex,
                    value: qty,
                }
            );
            if (macchina != null)
                tmp.push(
                    {
                        name: macchinaIndex,
                        value: macchina,
                    }
                );

            num++;
        }

        for (k = 0; k < $("#specializzazioni-list .element").length; k++) {
            var idM = $($("#specializzazioni-list .element")[k]).find(".Id_request").val();
            var idMIndex = arrName + "[" + num + "].Id";



            var mId = $($("#specializzazioni-list .element")[k]).find(".SpecializzazioneId").val();
            var mIDIndex = arrName + "[" + num + "].SpecializzazioneId";
            var qty = $($("#specializzazioni-list .element")[k]).find(".qty").val();
            var qtyIndex = arrName + "[" + num + "].qty";


            if (idM != null) {
                tmp.push(
                    {
                        name: idM,
                        value: idMIndex,
                    }
                );
            }

            tmp.push(
                {
                    name: mIDIndex,
                    value: mId,
                }
            );
            tmp.push(
                {
                    name: qtyIndex,
                    value: qty,
                }
            );

            num++;
        }


        tmp.push(
            {
                name: "request.Descr",
                value: $("#request_name").val(),
            }
        );

        tmp.push(
            {
                name: "request.TurnoId",
                value: $("#turno_select").val(),
            }
        );

        if ($("#id_request").val() != null && $("#id_request").val() != "") {
            tmp.push(
                {
                    name: "request.Id",
                    value: $("#id_request").val(),
                }
            );
        }
        if ($("#dateSearch").val() != null && $("#dateSearch").val() != "") {
            tmp.push(
                {
                    name: "request.WorkDate",
                    value: $("#dateSearch").val(),
                }
            );
        }


        $.ajax({
            type: "POST",
            url: "InsertRequestBozza",
            data: tmp, // serializes the form's elements.
            success: function (data) {
                window.location.href = "/resourcerequest/edit?id=" + data.data;
            }
        });

    }


    function sendRequest() {


        if (sending) return;


        sending = true;

        var tmp = [];
        var num = 0;

        var arrName = "request.dettagli";

        if ($("#request_name").val() == null || $("#request_name").val() == "") {
            return;
        }

        if ($("#turno_select").val() == null || $("#turno_select").val() == "") {
            return;
        }


        for (k = 0; k < $("#mansioni-list .element").length; k++) {
            var idM = $($("#mansioni-list .element")[k]).find(".Id_request").val();
            var idMIndex = arrName + "[" + num + "].Id";
            var mId = $($("#mansioni-list .element")[k]).find(".MansioneId").val();
            var mIDIndex = arrName + "[" + num + "].MansioneId";
            var qty = $($("#mansioni-list .element")[k]).find(".qty").val();
            var qtyIndex = arrName + "[" + num + "].qty";
            var macchina = $($("#mansioni-list .element")[k]).find(".MacchinaId").val();
            var macchinaIndex = arrName + "[" + num + "].MacchinaId";


            if (idM != null) {
                tmp.push(
                    {
                        value: idM,
                        name: idMIndex,
                    }
                );
            }

            tmp.push(
                {
                    name: mIDIndex,
                    value: mId,
                }
            );
            tmp.push(
                {
                    name: qtyIndex,
                    value: qty,
                }
            );
            if (macchina != null)
                tmp.push(
                    {
                        name: macchinaIndex,
                        value: macchina,
                    }
                );

            num++;
        }

        for (k = 0; k < $("#specializzazioni-list .element").length; k++) {
            var idM = $($("#specializzazioni-list .element")[k]).find(".Id_request").val();
            var idMIndex = arrName + "[" + num + "].Id";



            var mId = $($("#specializzazioni-list .element")[k]).find(".SpecializzazioneId").val();
            var mIDIndex = arrName + "[" + num + "].SpecializzazioneId";
            var qty = $($("#specializzazioni-list .element")[k]).find(".qty").val();
            var qtyIndex = arrName + "[" + num + "].qty";


            if (idM != null) {
                tmp.push(
                    {
                        name: idM,
                        value: idMIndex,
                    }
                );
            }

            tmp.push(
                {
                    name: mIDIndex,
                    value: mId,
                }
            );
            tmp.push(
                {
                    name: qtyIndex,
                    value: qty,
                }
            );

            num++;
        }


        tmp.push(
            {
                name: "request.Descr",
                value: $("#request_name").val(),
            }
        );

        tmp.push(
            {
                name: "request.TurnoId",
                value: $("#turno_select").val(),
            }
        );

        if ($("#id_request").val() != null && $("#id_request").val() != "") {
            tmp.push(
                {
                    name: "request.Id",
                    value: $("#id_request").val(),
                }
            );
        }
        if ($("#dateSearch").val() != null && $("#dateSearch").val() != "") {
            tmp.push(
                {
                    name: "request.WorkDate",
                    value: $("#dateSearch").val(),
                }
            );
        }
        tmp.push(
            {
                name: "request.Stato",
                value: 1,
            }
        );

        $.ajax({
            type: "POST",
            url: "InsertRequestBozza",
            data: tmp, // serializes the form's elements.
            success: function (data) {
                window.location.href = "/resourcerequest/edit?id=" + data.data;
            }
        });

    }


    function updateTotal() {
        var total = mansioniReqs + specReqs;

        $("#totRichieste").text(total);

        $("#mansioniId_rep").attr({
            "value": mansioniReqs,
            "data-max": total,
        });
        $("#specilizzazioniId_rep").attr({
            "value": specReqs,
            "data-max": total,
        });



        $('.knob').trigger('configure', {
            max: total
        });
        loadKnob();

        $('.knob').trigger('change').trigger('draw');
    }


    function loadKnob() {
        $('.knob').knob({

            draw: function () {

                if (this.$.data('skin') == 'tron') {

                    var a = this.angle(this.cv)  // Angle
                        ,
                        sa = this.startAngle          // Previous start angle
                        ,
                        sat = this.startAngle         // Start angle
                        ,
                        ea                            // Previous end angle
                        ,
                        eat = sat + a                 // End angle
                        ,
                        r = true

                    this.g.lineWidth = this.lineWidth

                    this.o.cursor
                        && (sat = eat - 0.3)
                        && (eat = eat + 0.3)

                    if (this.o.displayPrevious) {
                        ea = this.startAngle + this.angle(this.value)
                        this.o.cursor
                            && (sa = ea - 0.3)
                            && (ea = ea + 0.3)
                        this.g.beginPath()
                        this.g.strokeStyle = this.previousColor
                        this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, sa, ea, false)
                        this.g.stroke()
                    }

                    this.g.beginPath()
                    this.g.strokeStyle = r ? this.o.fgColor : this.fgColor
                    this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, sat, eat, false)
                    this.g.stroke()

                    this.g.lineWidth = 2
                    this.g.beginPath()
                    this.g.strokeStyle = this.o.fgColor
                    this.g.arc(this.xy, this.xy, this.radius - this.lineWidth + 1 + this.lineWidth * 2 / 3, 0, 2 * Math.PI, false)
                    this.g.stroke()

                    return false
                }
                $("#charts").show();
            }
        })
        $(".knob").each(function () {
            this.value = Math.round(this.getAttribute('value'));
        }).knob({

            'dynamicDraw': true,

        });
    }

    

    loadKnob();
    updateTotal();
    loadSommatio();

</script>