#pragma checksum "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Noleggi/_editOptions.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6901a482b1cc83225166aca6a626be7cfa15cb73"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Noleggi__editOptions), @"mvc.1.0.view", @"/Views/Noleggi/_editOptions.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/_ViewImports.cshtml"
using LoocERP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/_ViewImports.cshtml"
using LoocERP.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Noleggi/_editOptions.cshtml"
using LoocERP.Controllers;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6901a482b1cc83225166aca6a626be7cfa15cb73", @"/Views/Noleggi/_editOptions.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a0e64de071199ae55fa1bfd96ad5ab02ba5443b9", @"/Views/_ViewImports.cshtml")]
    public class Views_Noleggi__editOptions : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral(@"<div class=""modal fade bd-example-modal-lg"" id=""modalEditOptions"" role=""dialog"" >
    <div class=""modal-dialog modal-lg"">
        <!-- Modal content-->
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title"">Dettagli contratto</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body"">
                <div id=""formoptionAssign"">
                    <div id=""optionAssignForm"" class=""row"">

                    </div>
                    <button onclick=""updateEclose()"" class=""btn btn-primary"">Aggiungi</button>
                </div>
            </div>
        </div>
    </div>
</div>

");
#nullable restore
#line 22 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Noleggi/_editOptions.cshtml"
 using (Html.BeginScripts())
{ 

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<script>
    var selectedOptions = [];
    var currentId = '';


    function updateEclose() {
        var data = {};
        data[""Id""] = currentId;
        for (var k = 0; k < selectedOptions.length; k++) {
            data[""options["" + k + ""]""] = selectedOptions[k];
        }
        console.log(data);
        console.log({""ciao"" : ""miao"",""ciao2"":""boh""});
        $.post('/Noleggi/ajaxUpdateOptions',
            data,
            function (data, status) {
                refreshUsed(currentId, function () {
                    var empModal = $('#modalEditOptions');
                    empModal.modal('hide');
                });
            });        
    }

    function openmodalEditOptions(id) {
        selectedOptions = [];
        $(""#optionAssignForm"").html("""");
        currentId = id;
        var empModal = $('#modalEditOptions');
        $.ajax({
            url: '/Noleggi/ajaxGetOptions?id='+id,
            success: function (data) {

                for (var k = 0; k < data.data.length; k++) {
    ");
            WriteLiteral(@"                var selected = """";

                    if (data.data[k].selected) {
                        selected = 'checked=""checked""';
                    }

                    $(""#optionAssignForm"").html($(""#optionAssignForm"").html() +
                        '<div class=""col-sm-6"">' +
                            '<div class=""custom-control custom-switch"">'+
                        '<input type=""checkbox"" class=""custom-control-input"" id=""switch[' + k + ']"" name=""options[]"" value=""' + data.data[k].id +'"" onclick=""onCheckClick(this)"" ' + selected+'>' +
                                '<label class=""custom-control-label"" for=""switch[' + k + ']"">' + data.data[k].name + '</label>' +
                            '</div>'+
                        '</div>');

                    if (selected != """") {
                        selectedOptions.push(data.data[k].id);
                    }
                }
                empModal.modal('show');
            }
        });
    }


    function onCheckClick(self) {
  ");
            WriteLiteral(@"      var val = $(self).is("":checked"");
        var id = $(self).val();
        console.log(id);
        if (val) {
            if (!selectedOptions.includes(id)) {
                selectedOptions.push(id);
            }
        } else {
            if (selectedOptions.includes(id)) {
                selectedOptions.splice(selectedOptions.indexOf(id),1);
            }
        }



    }

    function refreshUsed(id,onFinish) {
        $(""#listOptionsUsed"").html("""");

        $.ajax({
            url: '/Noleggi/ajaxGetOptions?id=' + id,
            success: function (data) {

                for (var k = 0; k < data.data.length; k++) {
                    var selected = """";

                    if (data.data[k].selected) {
                        $(""#listOptionsUsed"").html($(""#listOptionsUsed"").html() +
                            '<div class=""col-sm-12"">' +
                            '<div class=""custom-control custom-switch"">' +
                            '<input type=""checkbox"" class=""custom-control-input");
            WriteLiteral(@""" id=""switch[' + k + ']"" name=""options[]"" value=""' + data.data[k].id + '"" onclick=""onCheckClick(this)"" checked=""checked""  disabled=""disabled"">' +
                            '<label class=""custom-control-label"" for=""switch[' + k + ']"">' + data.data[k].name + '</label>' +
                            '</div>' +
                            '</div>');
                    }
                }
                onFinish();
            }
        });
    }
       

    $(document).ready(function () {

        $('#formoptionAssign').on(""submit"", function (e) {
            e.preventDefault(); // cancel the actual submit

            var elements = $(this).serializeArray();
            var data = [];

            jQuery.each(elements, function (i, elem) {
                data[elem.name] = elem.value;
            });

            $.ajax({
                url: '/Noleggi/ajaxAddOption',
                type: 'post',
                data: { Name: data[""Name""], },
                success: function (data) {
                    c");
            WriteLiteral(@"onsole.log(data.data);

                    // Add response in Modal body
                    //Svuoto modale
                    var empModal = $('#modalproperyedit');
                    $('#modalproperyedit').modal('hide');


                    reloadTable();
                }
            });
        }
        );
        }
    );
</script>
");
#nullable restore
#line 158 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Noleggi/_editOptions.cshtml"

}

#line default
#line hidden
#nullable disable
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
