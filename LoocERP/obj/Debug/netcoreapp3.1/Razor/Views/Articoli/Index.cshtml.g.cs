#pragma checksum "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Articoli/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7b61a965e0c7e315ddb5ca36a90705f072f7a012"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Articoli_Index), @"mvc.1.0.view", @"/Views/Articoli/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/_ViewImports.cshtml"
using LoocERP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/_ViewImports.cshtml"
using LoocERP.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7b61a965e0c7e315ddb5ca36a90705f072f7a012", @"/Views/Articoli/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a0e64de071199ae55fa1bfd96ad5ab02ba5443b9", @"/Views/_ViewImports.cshtml")]
    public class Views_Articoli_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Articoli/Index.cshtml"
  
    Layout = "_DevExtremeLayout";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div>&nbsp;</div>
<section class=""content"">
    <div class=""row"">
        <div class=""col-12"">
            <div class=""card card-primary"">
                <!-- /.card-header -->
                <div class=""card-body"">
                    <div class=""col-12"">

                        ");
#nullable restore
#line 14 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Articoli/Index.cshtml"
                    Write( Html.DevExtreme().DataGrid<LoocERP.Models.Articolo>()
                            //.OnSelectionChanged("selection_changed")
                            .ID("gridContainer")
                            .ShowBorders(true)
                            .HoverStateEnabled(true)
                            .Selection(s => s.Mode(SelectionMode.Single))
                            .FilterRow(filterRow => filterRow
                                .Visible(true)
                                .ApplyFilter(GridApplyFilterMode.Auto)
                            )
                            .SearchPanel(searchPanel => searchPanel
                                .Visible(true)
                                .Width(240)
                                .Placeholder("Cerca...")
                            )
                            .DataSource(ds => ds.Mvc()
                                .Controller("Articoli")
                                .LoadAction("Get")
                                .DeleteAction("Delete")
                                .UpdateAction("Put")
                                .Key("ID")
                            )
                            .Editing(e => e.Mode(GridEditMode.Popup)
                                .AllowUpdating(true)
                                .AllowAdding(true)
                                .AllowDeleting(true)
                                .UseIcons(true)

                                .Popup(p => p
                                    .Title("Modifica articolo")
                                    .ShowTitle(true)
                                    .FullScreen(true)
                                )
                                .Form(f => f.Items(items =>
                                {
                                    
                                    var tabs = new[] {
                                        new { id = 0, text = "user", icon = "user", content = "User tab content" },
                                        new { id = 1, text = "comment", icon = "comment", content = "Comment tab content" },
                                        new { id = 2, text = "find", icon = "find", content = "Find tab content" }
                                    };
                                    var t = Html.DevExtreme().Tabs()
                                        .DataSource(tabs)
                                        .Width(300)
                                        .ScrollByContent(true)
                                        .ShowNavButtons(true).ToTemplate();
    
                                    items.AddSimple().Template(Html.DevExtreme().Tabs()
                                        .DataSource(tabs)
                                        .Width(300)
                                        .ScrollByContent(true)
                                        .ShowNavButtons(true).ToTemplate().ToString());

                                    items.AddGroup()
                                       .Caption("Personal Data")
                                       .Items(groupItems =>
                                       {
                                           groupItems.AddSimpleFor(m => m.CodiceMag)
                                               .IsRequired(false);
                                       });

                                    items.AddSimpleFor(m => m.CodiceMag);

                                    /*
                                    items.AddSimpleFor(m => m.CodiceMag);

                                    items.AddSimpleFor(m => m.Descrizione);

                                    items.AddSimpleFor(m => m.idUm)
                                        .Editor(e => e
                                            .Lookup()
                                            .DataSource(ds => ds.WebApi().Controller("Articoli").LoadAction("C_UMLookup").Key("Value"))
                                            .ValueExpr("Value")
                                            .DisplayExpr("Text")
                                        );

                                    items.AddSimpleFor(m => m.ScortaMinima);

                                    items.AddSimpleFor(m => m.Qty);

                                    items.AddSimpleFor(m => m.IdMarca)
                                        .Editor(e => e
                                            .Lookup()
                                            .DataSource(ds => ds.WebApi().Controller("Articoli").LoadAction("MARCHELookup").Key("Value"))
                                            .ValueExpr("Value")
                                            .DisplayExpr("Text")
                                        );

                                    items.AddSimpleFor(m => m.IdCategoria);

                                    items.AddSimpleFor(m => m.PrezzoVendita);
                                    */
                                }))
                            )
                            .RemoteOperations(true)
                            .Columns(columns => {

                                columns.AddFor(m => m.CodiceMag);

                                columns.AddFor(m => m.Descrizione);

                                columns.AddFor(m => m.idUm).Lookup(lookup => lookup
                                    .DataSource(ds => ds.WebApi().Controller("Articoli").LoadAction("C_UMLookup").Key("Value"))
                                    .ValueExpr("Value")
                                    .DisplayExpr("Text")
                                );

                                columns.AddFor(m => m.ScortaMinima);

                                columns.AddFor(m => m.Qty);

                                columns.AddFor(m => m.IdMarca).Lookup(lookup => lookup
                                    .DataSource(ds => ds.WebApi().Controller("Articoli").LoadAction("MARCHELookup").Key("Value"))
                                    .ValueExpr("Value")
                                    .DisplayExpr("Text")
                                );

                                columns.AddFor(m => m.IdCategoria);

                                columns.AddFor(m => m.PrezzoVendita);
                            })
                        /*
                        .MasterDetail(m => m
                            .Enabled(true)
                            .Template(new TemplateName("gridContainer-details"))
                        )
                         */

                        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\n\n");
#nullable restore
#line 144 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Articoli/Index.cshtml"
                         using (Html.DevExtreme().NamedTemplate("gridContainer-details"))
                        {
                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 146 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Articoli/Index.cshtml"
                        Write(Html.DevExtreme().TabPanel()
                                .Items(items => {

                                    items.Add()
                                        .Title("Informazioni articolo")
                                        .Template(new TemplateName("gridContainer-details-tabOrders"))
                                        .Option("tabExtras", new JS("data"));
                                })
                            );

#line default
#line hidden
#nullable disable
#nullable restore
#line 154 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Articoli/Index.cshtml"
                             
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("\n\n");
#nullable restore
#line 158 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Articoli/Index.cshtml"
                         using (Html.DevExtreme().NamedTemplate("gridContainer-details-tabOrders"))
                        {
                            var formItemTemplate = "<%- editorOptions.value %>";

                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 162 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Articoli/Index.cshtml"
                        Write(Html.DevExtreme().Form<LoocERP.Models.Articolo>()
                                .ElementAttr("class", "address-form form-container")
                                .FormData(new JS("tabExtras"))
                                .ColCount(2)


                                .Items(items =>
                                {


                                    items.AddSimple().DataField("CodiceMag").Template(formItemTemplate);
                                    items.AddSimple().DataField("Descrizione").Template(formItemTemplate);
                                    items.AddSimple().DataField("PrezzoVendita").Template(formItemTemplate);
                                    items.AddSimple().DataField("nomeMarca").Template(formItemTemplate);

                                }
                                )

                            );

#line default
#line hidden
#nullable disable
#nullable restore
#line 180 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Articoli/Index.cshtml"
                             
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("\n\n\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>\n<style>\n");
            WriteLiteral(@"
    .dx-header-row {
        color: white;
    }

    #gridContainer .dx-datagrid-headers .dx-header-row {
        background-color: #507CD1;
    }

    #gridContainer .dx-datagrid-header-panel {
        padding: 0;
        background-color: rgb(154 201 255 / 60%);
        border-radius: 5px 5px 0px 0px;
    }

    #gridContainer .dx-datagrid-header-panel .dx-toolbar {
        margin: 0;
        padding-right: 20px;
        background-color: transparent;
    }

    #gridContainer .dx-datagrid-header-panel .dx-toolbar-items-container {
        height: 70px;
    }

    #gridContainer .dx-datagrid-header-panel .dx-toolbar-before .dx-toolbar-item:not(:first-child) {
        background-color: rgba(103, 171, 255, 0.6);
    }

    #gridContainer .dx-datagrid-header-panel .dx-toolbar-before .dx-toolbar-item:last-child {
        padding-right: 10px;
    }

    #gridContainer .dx-datagrid-header-panel .dx-selectbox {
        margin: 17px 10px;
    }

    #gridContainer .dx-datagrid-header-panel .dx-button {
        ma");
            WriteLiteral(@"rgin: 17px 0;
    }

    #gridContainer .informer {
        height: 70px;
        width: 130px;
        text-align: center;
        color: #fff;
    }

    #gridContainer .count {
        padding-top: 15px;
        line-height: 27px;
        font-size: 28px;
        margin: 0;
        font-weight: normal;
        font-family: ""Helvetica Neue"", ""Segoe UI"", Helvetica, Verdana, sans-serif;
    }

    .form-container {
        padding: 20px;
    }

    ​
    .address-form label {
        font-weight: bold;
    }
</style>
");
            DefineSection("Scripts", async() => {
                WriteLiteral(@" 
    <script>
        var prevGrid = null;
        function selection_changed(e) {
            /*
            if (prevGrid != null) {
                var key = prevGrid;
                var treeList = $(""#gridContainer"").dxDataGrid(""instance"");
                treeList.collapseRow(key);
            }
            */
            

            if (prevGrid != null ) {
                var key = prevGrid;
                var treeList = $(""#gridContainer"").dxDataGrid(""instance"");
                treeList.collapseRow(key);
            }
            
            var key = e.selectedRowKeys[0];
            var treeList = $(""#gridContainer"").dxDataGrid(""instance"");

           
            if (treeList.isRowExpanded(key)) {
                treeList.collapseRow(key);
            } else {
                treeList.expandRow(key);
            }
            prevGrid = key;
            //$('#mybutton').trigger('click');
        }

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
