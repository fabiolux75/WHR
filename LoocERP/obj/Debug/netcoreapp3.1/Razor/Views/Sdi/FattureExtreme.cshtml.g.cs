#pragma checksum "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureExtreme.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "42142eab75f3af36c53cc831b8797db3dc75104a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Sdi_FattureExtreme), @"mvc.1.0.view", @"/Views/Sdi/FattureExtreme.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/_ViewImports.cshtml"
using LoocERP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/_ViewImports.cshtml"
using LoocERP.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"42142eab75f3af36c53cc831b8797db3dc75104a", @"/Views/Sdi/FattureExtreme.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a0e64de071199ae55fa1bfd96ad5ab02ba5443b9", @"/Views/_ViewImports.cshtml")]
    public class Views_Sdi_FattureExtreme : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<LoocERP.ViewModels.SelectBoxViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/theme/plugins/jsgrid/jsgrid.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/theme/plugins/jsgrid/jsgrid-theme.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/theme/plugins/tabulator/css/semantic-ui/tabulator_semantic-ui.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n");
#nullable restore
#line 3 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureExtreme.cshtml"
  
    
    ViewData["Title"] = ViewData["inout"].Equals("1")  ?  "Fatture Ricevute" : "Fatture Emesse";
    var captionTitle = ViewData["inout"].Equals("1")  ?  "Mittente" : "Destinatario";


#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "42142eab75f3af36c53cc831b8797db3dc75104a5191", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "42142eab75f3af36c53cc831b8797db3dc75104a6289", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "42142eab75f3af36c53cc831b8797db3dc75104a7387", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"


<!--Export stuff-->
<script type=""text/javascript"" src=""https://oss.sheetjs.com/sheetjs/xlsx.full.min.js""></script>



<div>&nbsp;</div>
<section class=""content"">

   

    <div class=""row"">
        <div class=""col-12"">
            <div class=""card card-info"">
                <div class=""card-header"">
                    <h3><i class=""fas fa-file-alt mr-2""></i> ");
#nullable restore
#line 29 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureExtreme.cshtml"
                                                        Write(ViewData["Title"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h3>
                </div>
                <div class=""card-body"">
                    <div class=""form-group row callout callout-success"">
                        <label for=""selectboxanno"" class=""col-sm-2 col-form-label""><i class=""fas fa-search mr-2 text-muted""></i> Visualizza fatture anno: </label>
                        
                        <div class=""col-xs-2 col-sm-2 col-md-2 col-lg-2 "">
                                ");
#nullable restore
#line 36 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureExtreme.cshtml"
                            Write(Html.DevExtreme().SelectBox().ID("selectboxanno")
                                    .Items( Model.Items )
                                    .Placeholder(" - Seleziona anno -")
                                    .OnValueChanged("changeYear")
                                    .ShowClearButton(true)
                                );

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                                <span class=""text-muted""><small>Scegli l'anno per visualizzare le fatture di quel periodo</small></span>
                        </div>
                        <div class=""col-3 offset-5"">
                                    <!-- small box -->
                                    <div class=""small-box bg-success pt-3 pl-3 pb-3"">
                                            <div class=""row"">
                                                <div class=""col-3"">
                                                    <i class=""fas fa-wallet fa-3x ""></i>
                                                </div>
                                                <div class=""col-6 text-right offset-2"">
                                                        <div class=""inner"">
                                                            <h4 class=""font-weight-bold"">&euro; <span id=""importoVal"" class=""ml-2"">0,00 </span></h4>
                                                            <p class=""font");
            WriteLiteral(@"-italic"">Importo totale</p>
                                                        </div>
                                                </div>
                                            </div>
                                    </div>
                        </div>                        
                    </div>                     
                    <div class=""col-12"">

                        ");
#nullable restore
#line 63 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureExtreme.cshtml"
                    Write( Html.DevExtreme().DataGrid<LoocERP.Models.Sdi.SdiDoc>()
                            .ID("gridContainer")
                            .ShowBorders(true)
                            .HeaderFilter(headerFilter => headerFilter.Visible(true))
                            .AllowColumnReordering(true)
                            .AllowColumnResizing(true)
                            .ColumnAutoWidth(true)
                            .HoverStateEnabled(true)
                            .OnContentReady("aggiornaImportoTotale")
                            .RowAlternationEnabled(true)
                            .Grouping(grouping => grouping.AutoExpandAll(true))
                            .GroupPanel(groupPanel => groupPanel.Visible(true))
                            .Paging(paging => paging.PageSize(10))
                            .Pager(pager => {
                                pager.Visible(true);
                                pager.DisplayMode(GridPagerDisplayMode.Full);
                                pager.ShowPageSizeSelector(true);
                                pager.AllowedPageSizes(new JS("[5, 10, 'all']"));
                                pager.ShowInfo(true);
                                pager.ShowNavigationButtons(true);
                            })                            
                            .FilterRow(filterRow => filterRow
                                .Visible(true)
                                .ApplyFilter(GridApplyFilterMode.Auto)
                            )
                            .SearchPanel(searchPanel => searchPanel
                                .Visible(true)
                                .Width(240)
                                .Placeholder("Cerca...")
                            )
                            .DataSource(ds => ds.Mvc()
                                .Controller("sdi")
                                .LoadAction("Get")
                                .LoadParams(new
                                {
                                    tipoFattura = ViewData["inout"],
                                    anno = new JS("function() { return anno; }")
                                })                                
                                .Key("Id")
                            )
                            .RemoteOperations(true)
                            .Summary(s => s.TotalItems(items => {
                                items.AddFor(m => m.Importo)
                                .SummaryType(SummaryType.Sum)
                                .Name("TotaleImporto")
                                .CustomizeText(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    WriteLiteral("\n                                    function(data) { return \"Totale: \" + formatDate(data.value); }\n                                ");
    PopWriter();
}
));

                            }))                            
                            .Columns(columns => {
                                columns.AddFor(m => m.numDoc).Caption("Num. Fattura").Alignment(HorizontalAlignment.Right).Width(150);
                                columns.AddFor(m => m.DataDoc).Caption("Data Fattura").Format("dd/MM/yyyy").Alignment(HorizontalAlignment.Right).Width(180).SortOrder(SortOrder.Desc);
                                columns.AddFor(m => m.CompanyName).Caption(@captionTitle); 
                                columns.AddFor(m => m.DataCreazione).Caption("Data invio").Format("dd/MM/yyyy").Alignment(HorizontalAlignment.Right).Width(180); 
                                columns.AddFor(m => m.Importo).Caption("Importo").Format(f=> f.Currency("EUR").Type("currency").Precision(2));
                                columns.Add()
                                .Caption("Operazioni")
                                        .Type(GridCommandColumnType.Buttons)
                                            .Buttons(b => {
                                                b.Add().Icon("far fa-file-alt").Hint("Apri documento").OnClick("viewInvoice");
                                                b.Add().Icon("fas fa-file-pdf text-danger").Hint("Scarica PDF").OnClick("pdfDownload");
                                                b.Add().Icon("far fa-file-code").Hint("Scarica XML").OnClick("xmlDownload");
                                            });

                                columns.Add().Visible(false)
                                .Caption("")  
                                .CellTemplate(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    WriteLiteral("\n\n");
    WriteLiteral("                                                ");
#nullable restore
#line 137 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureExtreme.cshtml"
                                            Write(Html.DevExtreme().Button()
                                                        .Icon("far fa-file-alt")
                                                        .Type(ButtonType.Success)
                                                        .Text("Apri DDT")
                                                        .OnClick("function(e) { onDelete(e, data) }")  
                                                        );

#line default
#line hidden
#nullable disable
    WriteLiteral("\n                                                ");
    PopWriter();
}
));

                            }
                            )
                               /* columns.Add()
                                        .Caption("Tipologia")
                                        .Width(230)
                                        .CalculateCellValue(
                                            @<text>
                                                function(data){
                                                    if (data.Suffisso == null) return '-';
                                                    if (data.Suffisso == 'S') return " DDT di scarico";
                                                    if (data.Suffisso == 'T') return " DDT di trasferimento";
                                                }
                               </text>);*/

                          

                        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\n\n\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    \n    \n</section>\n\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(" \n    <script>\n        var anno = null;\n        \n        var formatDate = new Intl.NumberFormat(\"it-IT\", { style: \"currency\", currency: \"EUR\" }).format;\n\n\n        function pdfDownload(data){\n            var url  = \'");
#nullable restore
#line 182 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureExtreme.cshtml"
                   Write(Url.Action("getPdf","sdi"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"?idPdf='+data.row.data.Id;
            window.open(url); 
        }

        function xmlDownload(data){
            var url  = '/api/FattureApi/download?id='+data.row.data.Id;
            window.open(url); 
        }

        function viewInvoice(data) {

            var url  = '");
#nullable restore
#line 193 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureExtreme.cshtml"
                   Write(Url.Action("ViewFattura","sdi"));

#line default
#line hidden
#nullable disable
                WriteLiteral("?id=\'+data.row.data.Id;\n//            DevExpress.ui.notify(\"The \" + url + \" button was clicked\");\n            window.open(url);\n        }\n\n        function onDelete(e,data) {\n            console.log(data);\n            var url  = \'");
#nullable restore
#line 200 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureExtreme.cshtml"
                   Write(Url.Action("FattureDdt","sdi"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"?idFattura='+data.Id;
            window.open(url);            
            
        }

        function changeYear(data){
            anno = data.value;
            $(""#gridContainer"").dxDataGrid(""instance"").refresh(); // Reload data. In this case, loadParams gets the new charger value
        }


        function aggiornaImportoTotale(){
            var valore = $(""#gridContainer"").dxDataGrid(""instance"").getTotalSummaryValue(""TotaleImporto"");
            $(""#importoVal"").text(Number(valore).toLocaleString(""it-IT"", {minimumFractionDigits: 2}));
        }

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<LoocERP.ViewModels.SelectBoxViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
