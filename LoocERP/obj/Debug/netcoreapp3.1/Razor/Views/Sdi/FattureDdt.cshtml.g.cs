#pragma checksum "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureDdt.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "96381d0a02f793589142d445b8459fc9f96db67c"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Sdi_FattureDdt), @"mvc.1.0.view", @"/Views/Sdi/FattureDdt.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/_ViewImports.cshtml"
using LoocERP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/_ViewImports.cshtml"
using LoocERP.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"96381d0a02f793589142d445b8459fc9f96db67c", @"/Views/Sdi/FattureDdt.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a0e64de071199ae55fa1bfd96ad5ab02ba5443b9", @"/Views/_ViewImports.cshtml")]
    public class Views_Sdi_FattureDdt : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<LoocERP.ViewModels.Sdi.FatturaViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/theme/plugins/jsgrid/jsgrid.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/theme/plugins/jsgrid/jsgrid-theme.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/theme/plugins/tabulator/css/semantic-ui/tabulator_semantic-ui.min.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureDdt.cshtml"
  
    ViewData["Title"] = "Elenco dei DDT associati alla fattura";

#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96381d0a02f793589142d445b8459fc9f96db67c5013", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96381d0a02f793589142d445b8459fc9f96db67c6111", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "96381d0a02f793589142d445b8459fc9f96db67c7209", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"


<!--Export stuff-->
<script type=""text/javascript"" src=""https://oss.sheetjs.com/sheetjs/xlsx.full.min.js""></script>



<div>&nbsp;</div>
<section class=""content"">

    <div class=""row"">
        <div class=""col-7"">
            <div class=""callout callout-danger"">
                <h3>Fattura N. ");
#nullable restore
#line 22 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureDdt.cshtml"
                          Write(Model.eFattura.FatturaElettronicaBody[0].DatiGenerali.DatiGeneraliDocumento.Numero);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h3>\n                <br>\n                <div class=\"row\">\n                   <div class=\"col-6\">\n                        <dl class=\"row\">\n                            <dt class=\"col-sm-4\">Mittente</dt>\n                            <dd class=\"col-sm-8\">\n");
#nullable restore
#line 29 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureDdt.cshtml"
                                  
                                    var mittente = @Model.eFattura.FatturaElettronicaHeader.CedentePrestatore.DatiAnagrafici.Anagrafica.Denominazione ?? @Model.eFattura.FatturaElettronicaHeader.CedentePrestatore.DatiAnagrafici.Anagrafica.CognomeNome;
                                

#line default
#line hidden
#nullable disable
            WriteLiteral("                                    ");
#nullable restore
#line 32 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureDdt.cshtml"
                               Write(mittente);

#line default
#line hidden
#nullable disable
            WriteLiteral("\n                            </dd>\n                            <dt class=\"col-sm-4\">Data emissione</dt>\n                            <dd class=\"col-sm-8\">");
#nullable restore
#line 35 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureDdt.cshtml"
                                            Write(Model.eFattura.FatturaElettronicaBody[0].DatiGenerali.DatiGeneraliDocumento.Data.ToShortDateString());

#line default
#line hidden
#nullable disable
            WriteLiteral("</dd>\n                            <dt class=\"col-sm-4 font-\">Importo</dt>\n                            <dd class=\"col-sm-6 col-lg-3 badge font-weight-bolder\" style =\" font-size: large; background-color: #26A69A\">");
#nullable restore
#line 37 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureDdt.cshtml"
                                                                                                                                    Write(Model.eFattura.FatturaElettronicaBody[0].DatiGenerali.DatiGeneraliDocumento.ImportoTotaleDocumento);

#line default
#line hidden
#nullable disable
            WriteLiteral(@" €</dd>                            
                        </dl>
                    </div>
                </div>

            </div>
        </div>
        <div class=""col-5"">

        </div>

    </div>
    
    <div class=""row"">
        <div class=""col-12"">
            <div class=""card"">
               <div class=""card-header"" style=""background-color: #5baaf5"">
                <h3 class=""card-title"">
                    <i class=""fas fa-truck mr-1""></i>
                        <b>Documenti di trasporto associati</b>
                </h3>
              </div>
                <div class=""card-body"">
                    <div class=""col-12"">

                        ");
#nullable restore
#line 62 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureDdt.cshtml"
                    Write( Html.DevExtreme().DataGrid()
                            .ID("gridContainer")
                            .ShowBorders(true)
                            .Toolbar(toolbar => {
                                toolbar.Items(items => {

                                    items.Add()
                                        .Location(ToolbarItemLocation.After)
                                        .Widget(w =>
                                            w.Button()
                                                .Icon("plus")
                                                .Type(ButtonType.Default)
                                                .Text("Associa DDT")
                                                .OnClick("openModalDDT")

                                        );
                                    items.Add()
                                        .Location(ToolbarItemLocation.After)
                                        .Widget(w =>
                                            w.Button()
                                                .Icon("refresh")
                                                .OnClick("refreshButtonClicked")

                                        );

                                });
                            })                            
                            .AllowColumnReordering(true)
                            .AllowColumnResizing(true)
                            .Selection(s => s.Mode(SelectionMode.Multiple))
                            .ColumnAutoWidth(true)
                            .HoverStateEnabled(true)
                            .Paging(paging => paging.PageSize(10))
                            .Pager(pager => {
                                pager.Visible(true);
                                pager.DisplayMode(GridPagerDisplayMode.Full);
                                pager.ShowPageSizeSelector(true);
                                pager.AllowedPageSizes(new JS("[5, 10, 'all']"));
                                pager.ShowInfo(true);
                                pager.ShowNavigationButtons(true);
                            })                            
                            .FilterRow(filterRow => filterRow
                                .Visible(true)
                                .ApplyFilter(GridApplyFilterMode.Auto)
                            )
                            .DataSource(ds => ds.Mvc()
                                .Controller("sdi")
                                .LoadAction("getDdt")
                                .LoadParams(new { idFattura = @Model.fattura.Id})
                                .Key("Id")
                            )
                            .RemoteOperations(true)
                            .Columns( columns => {
                                    columns.Add().DataField("Numero").Caption("Num. DDT").Width("30%");
                                    columns.Add().DataField("DataDDT")
                                            .Caption("Data emissione")
                                            .Format("dd/M/yyyy")
                                            .Alignment(HorizontalAlignment.Right)
                                            .DataType(GridColumnDataType.Date)
                                            ;
                                }
                            )
                            .MasterDetail(md => md
                                            .Enabled(true)
                                            .Template(item => new global::Microsoft.AspNetCore.Mvc.Razor.HelperResult(async(__razor_template_writer) => {
    PushWriter(__razor_template_writer);
    WriteLiteral("\n                                                <div class=\"master-detail-caption\">Dettaglio DDT:</div>\n                                                ");
#nullable restore
#line 128 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureDdt.cshtml"
                                            Write(Html.DevExtreme().DataGrid<LoocERP.Models.DdtDettaglio>()
                                                    .DataSource(d => d.Mvc()
                                                        .Controller("sdi")
                                                        .LoadAction("DdtDetails")
                                                        .LoadParams(new { DdtId = new JS("data.Id") })
                                                    )
                                                    .ShowBorders(true)
                                                    .Columns( columns => {
                                                                columns.AddFor(m => m.Codice).Caption("Cod. articolo");
                                                                columns.AddFor(m => m.Descrizione).Caption("Descrizione");
                                                            }

                                                    )
                                                );

#line default
#line hidden
#nullable disable
    WriteLiteral("\n\n                                            ");
    PopWriter();
}
))
                            )

                        );

#line default
#line hidden
#nullable disable
            WriteLiteral("\n\n\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n<!-- CREATE MODAL -->\n");
#nullable restore
#line 157 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureDdt.cshtml"
  
    Html.RenderPartial("modal_lista_ddt", @Model);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</section>
<style>
    
    #gridContainer .dx-datagrid-headers .dx-header-row {
      /*  background-color: rgb(154 201 255 / 60%);*/
    }
       
    #gridContainer .dx-header-row {
        color: white;
    }

    #gridContainer .dx-datagrid-headers .dx-header-row {
         background-color: #a9aaac 
    }

    #gridContainer .dx-datagrid-header-panel {
        padding: 0;
         /* background-color: rgb(154 201 255 / 60%); */
        border-radius: 5px 5px 0px 0px;
    }

    #gridContainer .dx-datagrid-header-panel .dx-toolbar {
        margin: 0;
        padding-right: 20px;
        background-color: transparent;
    }

    #gridContainer .dx-datagrid-header-panel .dx-toolbar-items-container {
        height: 70px;
    }

    #gridContainer .dx-datagrid-header-panel .dx-toolbar-before .dx-toolbar-item:not(:first-child) {
        background-color: rgba(103, 171, 255, 0.6);
    }

    #gridContainer .dx-datagrid-header-panel .dx-toolbar-before .dx-toolbar-item:last-child {
        padding-right: 10px;");
            WriteLiteral(@"
    }

    #gridContainer .dx-datagrid-header-panel .dx-selectbox {
        margin: 17px 10px;
    }

    #gridContainer .dx-datagrid-header-panel .dx-button {
        margin: 17px 0;
    }

    #gridContainer .informer {
        height: 70px;
        width: 130px;
        text-align: center;
        color: #fff;
    }

    #gridContainer .count {
        padding-top: 15px;
        line-height: 27px;
        font-size: 28px;
        margin: 0;
        font-weight: normal;
        font-family: ""Helvetica Neue"", ""Segoe UI"", Helvetica, Verdana, sans-serif;
    }

    .form-container {
        padding: 20px;
    }

    }
</style>
");
            DefineSection("Scripts", async() => {
                WriteLiteral(@" 
    <script>
        var dataGrid;

        function openModalDDT() {
            $(""#modal_lista_ddt"").modal(""show"");
        }
        function refreshButtonClicked(e) {
            $(""#gridContainer"").dxDataGrid(""instance"").refresh();
        }        


        $(document).ready(function () {

            dataGrid = $(""#DdtContainer"").dxDataGrid(""instance"");

            $(""#btn-associaddt"").on(""click"", function(){
                var guidSelected = dataGrid.getSelectedRowKeys();
                console.log(JSON.stringify(guidSelected));
                var fattId = '");
#nullable restore
#line 248 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Sdi/FattureDdt.cshtml"
                         Write(Model.fattura.Id);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
                var ids = JSON.stringify(guidSelected);
                
                $.ajax({
                    type: ""POST"",
                    data: { param : ids, fattID: fattId},
                    dataType: 'JSON',
                    url: ""/sdi/associaDdt""

                }).done(function(res){
                    var type = res ? ""success"" : ""error"",
                        text = res ? ""Operazione completata correttamente!"" : ""Attenzione: si è verificato un errore!"";
                    $(""#modal_lista_ddt"").modal(""hide"");
                    $(""#gridContainer"").dxDataGrid(""instance"").refresh();
                    dataGrid.refresh();
                    DevExpress.ui.notify( text, type, 6000);
                });

            })
            
        });

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<LoocERP.ViewModels.Sdi.FatturaViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
