#pragma checksum "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8282b79cbb5440677bedb20b3a2cd6559fb5863b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Vettore_IndexIndustriali), @"mvc.1.0.view", @"/Views/Vettore/IndexIndustriali.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/_ViewImports.cshtml"
using LoocERP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
using Microsoft.AspNetCore.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
using LoocERP.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
using System.Globalization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8282b79cbb5440677bedb20b3a2cd6559fb5863b", @"/Views/Vettore/IndexIndustriali.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a0e64de071199ae55fa1bfd96ad5ab02ba5443b9", @"/Views/_ViewImports.cshtml")]
    public class Views_Vettore_IndexIndustriali : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("assignVettoreCantiereForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("assignVettoreUserForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("assignVettoreParcheggioForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/theme/plugins/jquery-knob/jquery.knob.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/theme/plugins/sparkline/jquery.sparkline.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n");
            WriteLiteral("\n");
#nullable restore
#line 12 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
  
    ViewData["Title"] = "Vettori";
    ViewData["activePage"] = "Vector Page";
    DateTime today = DateTime.Now.Date;
    string todaystring = @today.Year + "-" + @today.Month.ToString("0#") + "-" + @today.Day.ToString("0#") + "T" + @today.Hour.ToString("0#") + ":" + @today.Minute.ToString("0#");
    string rand = Guid.NewGuid().ToString();


#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div>&nbsp;</div>

<section class=""content"">
    <div class=""card card-primary"">
        <div class=""card-body"">
            <div class=""col-12"">
                <div class=""row"">
                    <div class=""col-12 col-sm-4"">
                        <div class=""form-group"">
                            <label>Assegnazione in data:</label>
                            <div class=""col-xs-12"">
                                <div class=""input-group"">
                                    <div class=""form-group col-12"">
                                        <input type=""datetime-local""");
            BeginWriteAttribute("value", " value=\"", 1318, "\"", 1338, 1);
#nullable restore
#line 33 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
WriteAttributeValue("", 1326, todaystring, 1326, 12, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" id=""dateSearch"" data-date="""" data-date-format=""DD-MM-YYYY"" class=""form-control"" name=""EndDate"" placeholder=""Data di consegna"" onchange=""reloadTable()"" required>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id=""charts"" class=""col-12 col-sm-8"">
                        <p style=""text-align: center;
                                vertical-align: middle;"" id=""loadingSummary"">
                            <i class=""fas fa-2x fa-sync fa-spin ""></i><br />
                            <label>Caricamento sommario</label>
                        </p>
                        <div class=""row"" id=""chartsList"" style=""display: none;"">
                            <div class=""col-6 col-md-3 text-center"">
                                TOTALE VETTORI:<br>
                                <label id=""totVettori"" style=""font-size: 50px;""></label>
                            </d");
            WriteLiteral(@"iv>
                            <div class=""col-6 col-md-3 text-center"">
                                <input type=""text"" class=""knob"" value=""30"" data-width=""90"" data-height=""90"" data-fgColor=""#3c8dbc"" data-max=""30""
                                       data-readonly=""true""
                                       id=""inManutenzioneInput"">
                                <div class=""knob-label"">Vettori in Manutenzione</div>
                            </div>
                            <div class=""col-6 col-md-3 text-center"">
                                <input type=""text"" class=""knob"" value=""30"" data-width=""90"" data-height=""90"" data-fgColor=""#3c8dbc"" data-max=""30""
                                       data-readonly=""true""
                                       id=""assegnatiInput"">
                                <div class=""knob-label"">Vettori Assegnati</div>
                            </div>
                            <div class=""col-6 col-md-3 text-center"">
                                <input typ");
            WriteLiteral(@"e=""text"" class=""knob"" value=""30"" data-width=""90"" data-height=""90"" data-fgColor=""#3c8dbc"" data-max=""30""
                                       data-readonly=""true""
                                       id=""inParcheggioInput"">
                                <div class=""knob-label"">Vettori in parcheggio</div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </div>
    <div class=""row"">
        <div class=""col-12"">
            <div class=""card card-primary"">
                <!-- /.card-header -->
                <div class=""card-body"">
                    <div class=""col-12"">
                        <table id=""vettori"" class=""table table-bordered table-hover"">
                            <thead>
");
            WriteLiteral(@"                                <tr class=""rowclone"">
                                    <th>Proprietà</th>
                                    <th>Semaforo <br>(V/G/R)</th>
                                    <th>Targa</th>
                                    <th>Marca</th>
                                    <th>Descrizione</th>
                                    <th>Settore</th>
                                    <th>Numero Posti</th>
                                    <th>Codice Cantiere</th>
                                    <th>Cantiere</th>
                                    <th>Associata fino al</th>
                                    <th>Storico</th>
");
            WriteLiteral("                                    <th>Noleggio o Leasing</th>\n");
            WriteLiteral("                                    <th>Parcheggio</th>\n                                    <th>Y/N</th>\n                                    <th>Storico</th>\n");
            WriteLiteral(@"                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>


<style>
    .map-content {
        height: 300px;
        width: 100%;
    }

    /* Optional: Makes the sample page fill the window. */
    html,
    body {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    table.table-bordered.dataTable tbody th,
    table.table-bordered.dataTable tbody td {
        padding: 3px !important;
    }

        table.table-bordered.dataTable tbody td a {
            font-size: 13px;
        }

    span.select2-selection.select2-selection--single {
        min-height: 40px;
        width: 100% !important;
    }

    span.select2-selection.select2-selection--default {
        min-height: 40px;
        width: 100% !important;
    }

    span.select2-selection {
        min-hei");
            WriteLiteral(@"ght: 40px;
        width: 100% !important;
    }
    /*
    .tag-element {
        color: black;
        font-weight: bold;
        border-bottom: 2px solid #3846d9;
        padding: 0px 2px;
        //border-radius: 5px;
    }
    */
</style>


<div class=""modal-body""></div>

<!-- Modal -->
<div class=""modal fade"" id=""empModal"" role=""dialog"">
    <div class=""modal-dialog"">
        <!-- Modal content-->
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title""></h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body"">
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8282b79cbb5440677bedb20b3a2cd6559fb5863b13649", async() => {
                WriteLiteral(@"
                    <input class=""CodiceVettore"" type=""hidden"" name=""CodiceVettore"" />
                    <div class=""form-group"">
                        <label>Cantiere da assegnare*</label><br>
                        <select style=""width:100%"" name=""UserId"" class=""select2-listCantiere form-control"" required></select>
                        <small class=""form-text text-muted"">Inserisci la targa e seleziona il vettore da selezionale</small>
                    </div>
                    <div class=""form-group"">
                        <label>Data di assegnazione*</label>
                        <input type=""datetime-local"" class=""imp form-control"" name=""workdate"" placeholder=""Data di workdate"" required>
                    </div>
                    <button type=""submit"" class=""btn btn-primary"">Aggiorna</button>
                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"card-body\">\n    <div class=\"chart\">\n        <div class=\"chartjs-size-monitor\"><div class=\"chartjs-size-monitor-expand\"><div");
            BeginWriteAttribute("class", " class=\"", 8635, "\"", 8643, 0);
            EndWriteAttribute();
            WriteLiteral("></div></div><div class=\"chartjs-size-monitor-shrink\"><div");
            BeginWriteAttribute("class", " class=\"", 8702, "\"", 8710, 0);
            EndWriteAttribute();
            WriteLiteral(@"></div></div></div>
        <canvas id=""barChart"" style=""min-height: 250px; height: 250px; max-height: 250px; max-width: 100%; display: block; width: 739px;"" width=""739"" height=""250"" class=""chartjs-render-monitor""></canvas>
    </div>
</div>

<div class=""modal fade"" id=""empModalUser"" role=""dialog"">
    <div class=""modal-dialog"">
        <!-- Modal content-->
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title""></h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body"">
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8282b79cbb5440677bedb20b3a2cd6559fb5863b17033", async() => {
                WriteLiteral(@"
                    <input class=""CodiceVettore"" type=""hidden"" name=""CodiceVettore"" />
                    <div class=""form-group"">
                        <label>Utente da assegnare*</label><br>
                        <select style=""width:100%"" name=""UserId"" class=""select2-uservettore form-control"" required></select>
                        <small class=""form-text text-muted"">Inserisci il nome dell' utente</small>
                    </div>
                    <div class=""form-group"">
                        <label>Data di assegnazione*</label>
                        <input type=""datetime-local""");
                BeginWriteAttribute("value", " value=\"", 9994, "\"", 10014, 1);
#nullable restore
#line 231 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
WriteAttributeValue("", 10002, todaystring, 10002, 12, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" class=""imp form-control"" name=""StartDate"" placeholder=""Data di assegnazione"" data-date-format=""MM-dd-yyyy HH:mm"" required>
                    </div>
                    <div class=""form-group"">
                        <label>Data di consegna*</label>
                        <input type=""datetime-local""");
                BeginWriteAttribute("value", " value=\"", 10320, "\"", 10340, 1);
#nullable restore
#line 235 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
WriteAttributeValue("", 10328, todaystring, 10328, 12, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" data-date="""" data-date-format=""MM-dd-yyyy HH:mm"" class=""imp form-control"" name=""EndDate"" placeholder=""Data di consegna"" required>
                    </div>
                    <button type=""submit"" class=""btn btn-primary"">Aggiorna</button>
                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
        </div>
    </div>
</div>

<div class=""modal fade"" id=""addCarParkModal"" role=""dialog"">
    <div class=""modal-dialog"">
        <!-- Modal content-->
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title""></h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body"">
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8282b79cbb5440677bedb20b3a2cd6559fb5863b20797", async() => {
                WriteLiteral(@"
                    <input class=""CodiceVettore"" type=""hidden"" name=""CodiceVettore"" />
                    <div class=""form-group"">
                        <label>Parcheggio da assegnare*</label><br>
                        <select style=""width:100%"" name=""parkId"" class=""select2-parcheggiovettore form-control"" required></select>
                        <small class=""form-text text-muted"">Inserisci nome parcheggio</small>
                    </div>
                    <div class=""form-group"">
                        <label>Data di consegna*</label>
                        <input type=""date""");
                BeginWriteAttribute("value", " value=\"", 11700, "\"", 11720, 1);
#nullable restore
#line 262 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
WriteAttributeValue("", 11708, todaystring, 11708, 12, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" data-date=\"\" data-date-format=\"DD-MM-YYYY\" class=\"imp form-control\" name=\"workDate\" placeholder=\"Data di consegna\" required>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Aggiorna</button>\n                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\n            </div>\n        </div>\n    </div>\n</div>\n");
#nullable restore
#line 270 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
  
    await Html.RenderPartialAsync("_edit_numeri_posti");

#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
#nullable restore
#line 274 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
  
    await Html.RenderPartialAsync("_storicoVettore");
    await Html.RenderPartialAsync("_edit_property");
    await Html.RenderPartialAsync("_edit_noleggioleasing");

#line default
#line hidden
#nullable disable
            WriteLiteral("\n\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"

    <link rel=""stylesheet"" type=""text/css"" href=""https://cdn.datatables.net/fixedheader/3.1.4/css/fixedHeader.dataTables.css"" />

    <script type=""text/javascript"" src=""https://cdn.datatables.net/fixedheader/3.1.4/js/dataTables.fixedHeader.js""></script>

    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8282b79cbb5440677bedb20b3a2cd6559fb5863b24422", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\n    <!-- Sparkline -->\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "8282b79cbb5440677bedb20b3a2cd6559fb5863b25530", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script>
        var isEdit = 1 ;

        function openModal(CodiceVettore = null) {
            var empModal = $('#empModal');
            empModal.find("".CodiceVettore"").val(CodiceVettore);
            $("".imp"").val("""");
            empModal.modal('show');
        }

        function openModalUser(CodiceVettore = null) {
            var empModal = $('#empModalUser');
            empModal.find("".CodiceVettore"").val(CodiceVettore);
            $("".imp"").val("""");
            empModal.modal('show');
        }
        function openModalParcheggio(CodiceVettore = null) {
            var empModal = $('#addCarParkModal');
            empModal.find("".CodiceVettore"").val(CodiceVettore);
            $("".imp"").val("""");
            empModal.modal('show');
        }

        var filters = [];


        function applyOldFilters() {
            filters.forEach((element, index) => {
                if (element != null) {
                    $('#vettori').DataTable()
                        .column(index)
             ");
                WriteLiteral(@"           .search(element)
                        .draw();
                    $($('#vettori thead tr.rowclone:eq(1) th')[index]).find(""input"").val(element)
                }
            }
            );
        }

        function reloadTable() {



            var settore = '");
#nullable restore
#line 333 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
                      Write(ViewBag.settore);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\n            var sottoSettore = \'");
#nullable restore
#line 334 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
                           Write(ViewBag.sottosettore);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\n            var targa = \'");
#nullable restore
#line 335 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
                    Write(ViewBag.targa);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';

            var date = $(""#dateSearch"").val();


            reloadSummary();


            $('#vettori').DataTable().clear();
            $('#vettori').DataTable().destroy();

            $('#vettori thead tr.rowclone:eq(1) th').each(function (i) {
                var title = $(this).text();
                if (!$(this).hasClass(""hide-search"")) {
                    $(this).html('<input type=""text"" placeholder=""Cerca ' + title + '"" />');
                    $('input', this).on('keyup change', function () {
                        if (table.column(i).search() !== this.value) {
                            filters[i] = this.value;
                            table
                                .column(i)
                                .search(this.value)
                                .draw();
                        }
                    });
                }
            });
            var table = $('#vettori').DataTable({
                ajax: ""/Vettore/ajaxIndex?startTime="" + date + ""&settore="" + se");
                WriteLiteral(@"ttore + ""&sottosettore="" + sottoSettore + ""&targa="" + targa,

                dom: 'Bifrtip',//dom: 'Bftp',
                buttons: [
                    'copyHtml5',
                    'excelHtml5',
                    'csvHtml5',
                    'pdfHtml5'
                ],
                ""columns"": [
                    {  //proprietà
                        ""data"": null,
                        ""name"": """",
                        ""render"": function (data, type, row) {
                            if (row.company != null) {
                                return row.company.ragioneSociale
                                    + '</br><div class=""row""><div class=""col-6""><a onclick=""openModalPropertyVettore(' + row.codice + ' )""><i class=""fas fa-edit""></i></a></div><div class=""col-6""><a onclick=""removeCompany(' + row.codice + ' )""><i class=""fas fa-trash""></i></a></div></div>';
                            }
                            return '<a onclick=""openModalPropertyVettore(' + row.codice + ' )""><i ");
                WriteLiteral(@"class=""fa fa-plus""></i><i class=""fas fa-building""></i></a>';
                        }
                    },
                    {  //semaforo
                        ""data"": null,
                        ""name"": ""Immagine"",
                        ""render"": function (data, isEmployee, row) {

                            if (row.scheda == null) {
                                //wwwroot/looc/images/various/semaforoVerde32.png
                                //console.log(row);
                                return '<img src=""/looc/images/various/semaforoVerde32.png"" style=""height:50px;width:50px;margin: auto;"" /><span class=""d-none"">V</span>';
                            }
                            if (row.scheda.stato == 1) {
                                return '<img src=""/looc/images/various/semaforoRosso32.png"" style=""height:50px;width:50px;margin: auto;"" /><span class=""d-none"">R</span>';
                            } else {
                                return '<img src=""/looc/images/various/sem");
                WriteLiteral(@"aforoGiallo32.png"" style=""height:50px;width:50px;margin: auto;"" /><span class=""d-none"">G</span>';
                            }
                        }
                    },

                    { ""data"": ""targa"" },
                    { ""data"": ""marca"" },
                    { ""data"": ""descr"" },
                    { ""data"": ""codSettoreDesc"" },
                    {
                        ""data"": """",
                        ""render"": function (data, isEmployee, row) {
                            var posti = 0;
                            if (row.posti != null) {
                                posti = row.posti;
                            }
                            return 'Posti: '+posti + '</br><a class=""tag-element"" onclick=""openModalNPosti(' + row.codice + ', ' + posti + ')"" ><i class=\""fas fa-edit\""></i></a>';
                        }
                    },
                    {
                        ""data"": null,
                        ""name"": """",
                        ""render"": function (");
                WriteLiteral(@"data, type, row) {
                            var ret = """";

                            if (row.cantieri != null && row.cantieri.length > 0) {
                                ret += row.cantieri[0].codice;
                            }


                            return ret;
                        }
                    },
                    {
");
#nullable restore
#line 430 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
                          if (!(await AuthorizationService.AuthorizeAsync(User, "VettoreCantiere.Edit")).Succeeded) {
                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 431 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
                       Write(Html.Raw(@"""visible"": false, "));

#line default
#line hidden
#nullable disable
#nullable restore
#line 431 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
                                                              
                         }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                        ""data"": null,
                        ""name"": """",
                        ""render"": function (data, type, row) {
                            var html = """";

                            for (i = 0; i < row.cantieri.length; i++) {
                                html += '<a class=""tag-element"" onclick=""openModal(' + row.codice + ' )"" >'
                                    + row.cantieri[i].name + ""</br><i class=\""fas fa-edit\""></i></a>"";

                            }
                            if(isEdit==1){
                                if (row.cantieri.length == 0) html += '<a onclick=""openModal(' + row.codice + ' )""><i class=""fa fa-plus""></i><i class=""fa fa-wrench"" aria-hidden=""true""></i></a>';
                            }

                            return html;
                        }
                    },
                    {
                        ""data"": null,
                        ""name"": """",
                        ""render"": function (data, type, row) {
           ");
                WriteLiteral(@"                 if (row.cantieri.length > 0) {


                                return new Date(row.cantieri[0].endDate).toLocaleDateString('it-IT', {});//Date.parse(row.cantieri[0].endDate.toISOString()).toLocaleDateString('it-IT', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });
                            }
                            return """";
                        }
                    },
");
                WriteLiteral("\n\n\n");
                WriteLiteral(@"

                    /*
                    {
                        ""data"": null,
                        ""name"": """",
                        ""render"": function (data, type, row) {
                            if (row.cantieri.length > 0) {
                                return ""Y"";
                            }
                            return ""N"";
                        }
                    },
                    */

                    /*
                    {
                        ""data"": null,
                        ""name"": """",
                        ""render"": function (data, type, row) {
                            if (row.cantieri.length > 0) {


                                return new Date(row.cantieri[0].endDate).toLocaleDateString('it-IT', {});//Date.parse(row.cantieri[0].endDate.toISOString()).toLocaleDateString('it-IT', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' });
                            }
                            return """";
                        }
 ");
                WriteLiteral(@"                   },
                    */
                    {
                        ""data"": null,
                        ""name"": """",
                        ""render"": function (data, type, row) {
                            var html = '';
                            html += '<a onclick=""openVectorHistory(\'' + row.codice + '\',0)"" class=""tag-element"" ><i class=""fa fa-list"" aria-hidden=""true""></i></a>';
                            return html;
                        }
                    },
                    {
                        ""data"": null,
                        ""name"": """",
                        ""render"": function (data, type, row) {
                            if (row.vettoreAssegnazione != null) {
                                console.log(""row.vettoreAssegnazione"");
                                console.log(row.vettoreAssegnazione);
                                console.log(row.vettoreAssegnazione.noleggio);

                                if (row.vettoreAssegnazione.leasing != """);
                WriteLiteral(@""")
                                    return ""Leasing : "" + row.vettoreAssegnazione.leasing + '</br><a onclick=""removeFromLeasing(\'' + row.vettoreAssegnazione.id + '\')"" ><i class=""fas fa-trash""></i></a>';

                                if (row.vettoreAssegnazione.noleggio != """")
                                    return ""Noleggio : "" + row.vettoreAssegnazione.noleggio + '</br><a  onclick=""removeFromNoleggio(\'' + row.vettoreAssegnazione.id + '\')""><i class=""fas fa-trash""></i></a>';
                            }
                            return '<a onclick=""openModalProperty(' + row.codice + ' )""><i class=""fa fa-plus""></i><i class=""fas fa-info-circle""></i></a>';
                        }
                    },





");
                WriteLiteral("\n\n                    {\n");
#nullable restore
#line 592 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
                          if (!(await AuthorizationService.AuthorizeAsync(User, "Parking.Edit")).Succeeded) {
                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 593 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
                       Write(Html.Raw(@"""visible"": false, "));

#line default
#line hidden
#nullable disable
#nullable restore
#line 593 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
                                                              
                         }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                        ""data"": null,
                        ""name"": ""park"",
                        ""render"": function (data, type, row) {
                            var html = """";
                            if(isEdit==1){
                                if (row.parcheggi.length == 0) {
                                     html += '<a onclick=""openModalParcheggio(' + row.codice + ')""><i class=""fa fa-plus""></i><i class=""fa fa-stop-circle"" aria-hidden=""true""></i></a>';
                                }
                            }

                            for (i = 0; i < row.parcheggi.length; i++) {
                                html += ""<a class=\""targa\"" >"" + row.parcheggi[i].name + ""</a>  "";
                            }

                            return html;
                        }
                    },
                    {
                        ""data"": null,
                        ""name"": ""isPark"",
                        ""render"": function (data, type, row) {
                        ");
                WriteLiteral(@"    if (row.parcheggi.length > 0) {
                                return ""Y"";
                            }
                            return ""N"";
                        }
                    },

                    {
                        ""data"": null,
                        ""render"": function (data, type, row) {
                            var html = '';
                            html += '<a onclick=""openVectorHistory(\'' + row.codice + '\',1)"" class=""tag-element"" ><i class=""fa fa-list"" aria-hidden=""true""></i></a>';
                            return html;
                        }
                    },


                ],
                columnDefs: [
                    //  { targets: 2,render: $.fn.dataTable.render.moment('Do MMM YYYY') }
                ],
                ""language"": {
                    ""sEmptyTable"": ""Nessun dato presente nella tabella"",
                    ""sInfo"": ""Vista da _START_ a _END_ di _TOTAL_ elementi"",
                    ""sInfoEmpty"": ""Vista da 0 a 0 di 0 eleme");
                WriteLiteral(@"nti"",
                    ""sInfoFiltered"": ""(filtrati da _MAX_ elementi totali)"",
                    ""sInfoPostFix"": """",
                    ""sInfoThousands"": ""."",
                    ""sLengthMenu"": ""Visualizza _MENU_ elementi"",
                    ""sLoadingRecords"": ""Caricamento..."",
                    ""sProcessing"": ""Elaborazione..."",
                    ""sSearch"": ""Cerca:"",
                    ""sZeroRecords"": ""La ricerca non ha portato alcun risultato."",
                    ""oPaginate"": {
                        ""sFirst"": ""Inizio"",
                        ""sPrevious"": ""Precedente"",
                        ""sNext"": ""Successivo"",
                        ""sLast"": ""Fine""
                    },
                    ""oAria"": {
                        ""sSortAscending"": "": attiva per ordinare la colonna in ordine crescente"",
                        ""sSortDescending"": "": attiva per ordinare la colonna in ordine decrescente""
                    }
                },
                initComplete: function () {
      ");
                WriteLiteral(@"              // Apply the search
                    this.api().columns().every(function () {
                        var that = this;
                        $('input', this.header()).on('keyup change clear', function () {
                            if (that.search() !== this.value) {
                                that
                                    .search(this.value)
                                    .draw();
                            }
                        });
                    });
                    applyOldFilters();
                },
                ""autoWidth"": false,
                ""responsive"": true,
                orderCellsTop: true,
                fixedHeader: true
            });

        }



        function reloadSummary() {

            $(""#loadingSummary"").show();
            $(""#chartsList"").hide();
            var date = $(""#dateSearch"").val();
            var settore = '");
#nullable restore
#line 690 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
                      Write(ViewBag.settore);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\n            var sottoSettore = \'");
#nullable restore
#line 691 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
                           Write(ViewBag.sottosettore);

#line default
#line hidden
#nullable disable
                WriteLiteral("\';\n            var targa = \'");
#nullable restore
#line 692 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/IndexIndustriali.cshtml"
                    Write(ViewBag.targa);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';


            $.get(""/Vettore/ajaxGetVettoriSintex?startTime="" + date + ""&settore="" + settore + ""&sottosettore="" + sottoSettore + ""&targa="" + targa, function (data, status) {
                console.log(data);
                $('#totVettori').text(data.data.tot);
                $(""#inManutenzioneInput"").attr({
                    ""value"": data.data.inManutenzione,
                    ""data-max"": data.data.tot,
                });
                $(""#inParcheggioInput"").attr({
                    ""value"": data.data.inParcheggio,
                    ""data-max"": data.data.tot,
                });
                $(""#assegnatiInput"").attr({
                    ""value"": data.data.assegnati,
                    ""data-max"": data.data.tot,
                });

                $('.knob').knob({

                    draw: function () {

                        if (this.$.data('skin') == 'tron') {

                            var a = this.angle(this.cv)  // Angle
                                ,
                   ");
                WriteLiteral(@"             sa = this.startAngle          // Previous start angle
                                ,
                                sat = this.startAngle         // Start angle
                                ,
                                ea                            // Previous end angle
                                ,
                                eat = sat + a                 // End angle
                                ,
                                r = true

                            this.g.lineWidth = this.lineWidth

                            this.o.cursor
                                && (sat = eat - 0.3)
                                && (eat = eat + 0.3)

                            if (this.o.displayPrevious) {
                                ea = this.startAngle + this.angle(this.value)
                                this.o.cursor
                                    && (sa = ea - 0.3)
                                    && (ea = ea + 0.3)
                                this.g.");
                WriteLiteral(@"beginPath()
                                this.g.strokeStyle = this.previousColor
                                this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, sa, ea, false)
                                this.g.stroke()
                            }

                            this.g.beginPath()
                            this.g.strokeStyle = r ? this.o.fgColor : this.fgColor
                            this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, sat, eat, false)
                            this.g.stroke()

                            this.g.lineWidth = 2
                            this.g.beginPath()
                            this.g.strokeStyle = this.o.fgColor
                            this.g.arc(this.xy, this.xy, this.radius - this.lineWidth + 1 + this.lineWidth * 2 / 3, 0, 2 * Math.PI, false)
                            this.g.stroke()

                            return false
                        }
                        $(""#charts"").show();
                    ");
                WriteLiteral(@"}
                })
                $("".knob"").each(function () {
                    this.value = Math.round(this.getAttribute('value'));
                }).knob({

                    'dynamicDraw': true,

                });
                $(""#loadingSummary"").hide();
                $(""#chartsList"").show();
            });

        }

        $(document).ready(function () {




            $('#vettori thead tr.rowclone').clone(true).appendTo('#vettori thead');
            reloadTable();
            var date = $(""#dateSearch"").val();

            //reloadSummary();


            $('.select2-listCantiere').select2({
                placeholder: ""Inserisci nome cantiere."",
                minimumInputLength: 3,
                ajax: {
                    url: '/Vettore/ajaxCantiereVettoreList?dateTime='+date,
                    dataType: 'json',
                },
            });
            $('.select2-uservettore').select2({
                placeholder: ""Inserisci nome utente"",
                minimumIn");
                WriteLiteral(@"putLength: 3,
                ajax: {
                    url: '/Vettore/ajaxUserVettoreList',
                    dataType: 'json',
                },
            });


            $('.select2-parcheggiovettore').select2({
                placeholder: ""Inserisci nome parcheggio"",
                minimumInputLength: 3,
                ajax: {
                    url: '/Vettore/ajaxParkVettoreList?dateTime='+date,
                    dataType: 'json',

                },
            });


            $('#assignVettoreCantiereForm').on(""submit"", function (e) {
                e.preventDefault(); // cancel the actual submit
                var elements = $(this).serializeArray();
                var data = [];



                console.log(elements);




                jQuery.each(elements, function (i, elem) {
                    data[elem.name] = elem.value;
                });

                $.ajax({
                    url: '/Vettore/ajaxVettoreCantiereAssign',
                    type: 'post',
         ");
                WriteLiteral(@"           data: { CantiereId: data['UserId'], CodiceVettore: data['CodiceVettore'], WorkDate: data['workdate'] },
                    success: function (data) {
                        console.log(data.data);

                        // Add response in Modal body
                        //Svuoto modale
                        var empModal = $('#empModal');
                        empModal.find("".modal-header .modal-title"").html("""");//.html(data.data.nomeOperatore);
                        $("".select2-uservettore"").select2(""val"", """"); //svuoto valore selezionato
                        $('#empModal').modal('hide');

                        reloadTable();
                    }
                });

            });

            $('#assignVettoreUserForm').on(""submit"", function (e) {
                e.preventDefault(); // cancel the actual submit
                var elements = $(this).serializeArray();
                var data = [];
                jQuery.each(elements, function (i, elem) {
                    da");
                WriteLiteral(@"ta[elem.name] = elem.value;
                });


                $.ajax({
                    url: '/Vettore/ajaxVettoreUserAssign',
                    type: 'post',
                    data: { UserId: data['UserId'], CodiceVettore: data['CodiceVettore'], StartDate: data['StartDate'], EndDate: data['EndDate'] },
                    success: function (data) {
                        console.log(data.data);

                        // Add response in Modal body
                        //Svuoto modale
                        var empModal = $('#empModalUser');
                        empModal.find("".modal-header .modal-title"").html("""");//.html(data.data.nomeOperatore);
                        $("".select2-uservettore"").select2(""val"", """"); //svuoto valore selezionato
                        $('#empModalUser').modal('hide');
                        reloadTable();
                    }
                });
            });

            $('#assignVettoreParcheggioForm').on(""submit"", function (e) {
                e.pr");
                WriteLiteral(@"eventDefault(); // cancel the actual submit
                var elements = $(this).serializeArray();
                var data = [];
                jQuery.each(elements, function (i, elem) {
                    data[elem.name] = elem.value;
                });
                console.log(data);

                $.ajax({
                    url: '/Vettore/ajaxVettoreParcheggioAssign',
                    type: 'post',
                    data: { parkId: data['parkId'], CodiceVettore: data['CodiceVettore'], workDate: data['workDate'] },
                    success: function (data) {
                        console.log(data.data);

                        // Add response in Modal body
                        //Svuoto modale
                        var empModal = $('#addCarModal');
                        empModal.find("".modal-header .modal-title"").html("""");//.html(data.data.nomeOperatore);
                        $("".select2-uservettore"").select2(""val"", """"); //svuoto valore selezionato
                        $(");
                WriteLiteral("\'#addCarModal\').modal(\'hide\');\n\n                        reloadTable();\n                    }\n                });\n\n            });\n\n        });\n\n\n    </script>\n\n\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IAuthorizationService AuthorizationService { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public Microsoft.AspNetCore.Http.IHttpContextAccessor IHttpContextAccessor { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public UserManager<AppUser> UserManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public SignInManager<AppUser> SignInManager { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
