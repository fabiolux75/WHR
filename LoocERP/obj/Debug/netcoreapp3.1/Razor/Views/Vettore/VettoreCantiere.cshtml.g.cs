#pragma checksum "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/VettoreCantiere.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "578bc99fde461665a5fc89fdc0b513a608862f7f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Vettore_VettoreCantiere), @"mvc.1.0.view", @"/Views/Vettore/VettoreCantiere.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/_ViewImports.cshtml"
using LoocERP;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/_ViewImports.cshtml"
using LoocERP.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"578bc99fde461665a5fc89fdc0b513a608862f7f", @"/Views/Vettore/VettoreCantiere.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a0e64de071199ae55fa1bfd96ad5ab02ba5443b9", @"/Views/_ViewImports.cshtml")]
    public class Views_Vettore_VettoreCantiere : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<TimeSheet>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("assignVettoreUserForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/VettoreCantiere.cshtml"
  
    ViewData["Title"] = "Assegnazione mezzo a cantiere";
    ViewData["activePage"] = "Vector Page";

    DateTime today = DateTime.Now.Date;
    string todaystring = @today.Year + "-" + @today.Month.ToString("0#") + "-" + @today.Day.ToString("0#");
    /*
    DateTime wd = DateTime.Now;
    if (!DateTime.TryParse(wd.ToString(), out wd))
    {
        wd = DateTime.Now.Date;
    }
    string dten = @wd.Month.ToString("0#") + "-" + @wd.Day.ToString("0#") + "-" + @wd.Year;
    string dtenfull = @wd.Month.ToString("0#") + "-" + @wd.Day.ToString("0#") + "-" + @wd.Year + " 00:00:00";
    string dtit = @wd.Day.ToString("0#") + "-" + @wd.Month.ToString("0#") + "-" + @wd.Year;
    string dtitfull = @wd.Day.ToString("0#") + "-" + @wd.Month.ToString("0#") + "-" + @wd.Year + " 00:00:00";
    ViewBag.dtenfull = @dten;
    */

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<div>&nbsp;</div>
<section class=""content"">
    <div class=""card card-primary"">
        <div class=""card-body"">
            <div class=""col-12"">
                <div class=""form-group"">
                    <label>Assegnazione in data:</label>
                    <div class=""col-xs-12"">
                        <div class=""input-group"">
                            <div class=""form-group col-3"">
                                <input type=""date""");
            BeginWriteAttribute("value", " value=\"", 1299, "\"", 1319, 1);
#nullable restore
#line 31 "/home/fabio/Documenti/Emadema/dotnNet_prj/loocDev/LoocERP/Views/Vettore/VettoreCantiere.cshtml"
WriteAttributeValue("", 1307, todaystring, 1307, 12, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@"  id=""dateSearch""  data-date="""" data-date-format=""DD-MM-YYYY"" class=""form-control"" name=""EndDate"" placeholder=""Data di consegna"" onchange=""reloadTable()"" required>
                            </div>
                        </div>
                    </div>
                    <!-- /.input group -->
                </div>
            </div>
        </div>
    </div>
    <div class=""row"">
        <div class=""col-12"">
            <div class=""card card-primary"">
                <!-- /.card-header -->
                <div class=""card-body"">
                    <div class=""col-12"">
                        <table id=""vettori"" class=""table table-bordered table-hover"">
                            <thead>
                                <tr>
                                    <th>Nome Commessa</th>
                                    <th>Nome Cantiere</th>
                                    <th>Descrizione</th>
                                    <th>Totale vettori</th>
                                    <th colspan");
            WriteLiteral(@"=""2"" width=""10px"">Targa</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>
        </div>
    </div>
</section>




<div class=""modal-body""></div>

<!-- Modal -->
<div class=""modal fade"" id=""empModal"" role=""dialog"">
    <div class=""modal-dialog"">
        <!-- Modal content-->
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title""></h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body"">
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "578bc99fde461665a5fc89fdc0b513a608862f7f7481", async() => {
                WriteLiteral(@"
                    <input class=""VettoreUserId"" type=""hidden"" name=""UserId"" />
                    <div class=""form-group"">
                        <label>Vettura da assegnare*</label><br>
                        <select style=""width:100%"" name=""CodiceVettore"" class=""select2-uservettore form-control"" required></select>
                        <small class=""form-text text-muted"">Inserisci la targa e seleziona il vettore da selezionale</small>
                    </div>
                    <div class=""form-group"">
                        <label>Data di assegnazione*</label>
                        <input type=""datetime-local"" class=""form-control"" name=""workdate"" placeholder=""Data di workdate"" required>
                    </div>
                    <button type=""submit"" class=""btn btn-primary"">Aggiorna</button>
");
                WriteLiteral("                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
        </div>
    </div>
</div>


<div class=""modal fade"" id=""empModal2"" role=""dialog"">
    <div class=""modal-dialog"">
        <!-- Modal content-->
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h4 class=""modal-title""></h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>
            <div class=""modal-body"">
                <table id=""vettore_list"" class=""table table-bordered table-hover"">
                    <thead>
                        <tr>
                            <th>Targa</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


<style>
    /* Optional: Makes the sample page fill the window. */
    html,
    body {
        height: 100%;
        margin: 0;
        padding: 0;
    }

    .list-group-inner {
        border-left: 5px soli");
            WriteLiteral(@"d blue;
    }

    input.edit-input {
        border: none;
        border-bottom: 1px solid #ccc;
        text-align: center;
    }

    span.select2-selection.select2-selection--single {
        min-height: 40px;
        width: 100% !important;
    }

    span.select2-selection.select2-selection--default {
        min-height: 40px;
        width: 100% !important;
    }

    span.select2-selection {
        min-height: 40px;
        width: 100% !important;
    }

    .targa {
        color: black;
        font-weight: bold;
        border-bottom: 2px solid #3846d9;
        padding: 0px 2px;
        //border-radius: 5px;
    }
</style>

");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        function format(d) {
            var newLine = '<div class=""col-12""><div class=""col-4""><table id=""row_info_' + d.id + '"" class=""table table-bordered table-hover""><thead><tr><th>Targa</th><th>Data Riconsegna</th></tr>';


            for (var k = 0; k < d.vettori.length; k++) {
                newLine += '<tr>' +
                    '<td>' + d.vettori[k].targa + '</td>' +
                    '<td>' + d.vettori[k].endDate + '</td>' +
                    '</tr>';
            }

            newLine += '</thead><tbody></tbody></table></div></div>';

            return newLine;

        }

        function openModal(userid, fullname = """", CodiceVettore = null) {
            var empModal = $('#empModal');
            empModal.find("".modal-header .modal-title"").html(fullname);//.html(data.data.nomeOperatore);
            empModal.find("".VettoreUserId"").val(userid);
            empModal.modal('show');
        }

        function openModalVettore(cantiereId) {
            var empModal = $('#empMod");
                WriteLiteral(@"al2');
            empModal.modal('show');

            console.log(""/Vettore/ajaxCantiereVettore?cantiereId="" + cantiereId + ""&startTime="" + date);

            var date = $(""#dateSearch"").val();
            $.get(""/Vettore/ajaxCantiereVettore?cantiereId="" + cantiereId + ""&startTime=""+date, function (data, status) {
                var vettori = data.data[0].vettori;
                $('#vettore_list').DataTable().destroy();
                var table = $('#vettore_list').DataTable(
                    {
                        data: vettori,
                        dom: 'Bfrtip',//dom: 'Bftp',
                        buttons: [
                            'copyHtml5',
                            'excelHtml5',
                            'csvHtml5',
                            'pdfHtml5'
                        ],
                        ""columns"": [
                            {
                                ""data"": null,
                                ""name"": """",
                                ""render"": ");
                WriteLiteral(@"function (data, type, row) {
                                    return row.targa;
                                }
                            }
                        ],
                        columnDefs: [
                            //{ width: '50px', targets: 0 },
                            //  { width: '60px', targets: 5 },
                            //  { targets: 2,render: $.fn.dataTable.render.moment('Do MMM YYYY') }
                        ],
                        ""language"": {
                            ""sEmptyTable"": ""Nessun dato presente nella tabella"",
                            ""sInfo"": ""Vista da _START_ a _END_ di _TOTAL_ elementi"",
                            ""sInfoEmpty"": ""Vista da 0 a 0 di 0 elementi"",
                            ""sInfoFiltered"": ""(filtrati da _MAX_ elementi totali)"",
                            ""sInfoPostFix"": """",
                            ""sInfoThousands"": ""."",
                            ""sLengthMenu"": ""Visualizza _MENU_ elementi"",
                            ");
                WriteLiteral(@"""sLoadingRecords"": ""Caricamento..."",
                            ""sProcessing"": ""Elaborazione..."",
                            ""sSearch"": ""Cerca:"",
                            ""sZeroRecords"": ""La ricerca non ha portato alcun risultato."",
                            ""oPaginate"": {
                                ""sFirst"": ""Inizio"",
                                ""sPrevious"": ""Precedente"",
                                ""sNext"": ""Successivo"",
                                ""sLast"": ""Fine""
                            },
                            ""oAria"": {
                                ""sSortAscending"": "": attiva per ordinare la colonna in ordine crescente"",
                                ""sSortDescending"": "": attiva per ordinare la colonna in ordine decrescente""
                            }
                        },
                        initComplete: function () {
                            // Apply the search
                            this.api().columns().every(function () {
                   ");
                WriteLiteral(@"             var that = this;
                                $('input', this.header()).on('keyup change clear', function () {
                                    if (that.search() !== this.value) {
                                        that
                                            .search(this.value)
                                            .draw();
                                    }
                                });
                            });
                        },
                        ""paging"": true,
                        ""autoWidth"": false,
                        ""responsive"": true,
                        orderCellsTop: true,
                        fixedHeader: true
                    }
                );
                
            });


           
        }

        function reloadTable() {

            var date = $(""#dateSearch"").val();


            var url = ""/Vettore/ajaxCantiereVettore?startTime="" + date;
            $('#vettori').DataTable().clear();
            $(");
                WriteLiteral(@"'#vettori').DataTable().destroy();
            $('#vettori thead tr:eq(1) th').each(function (i) {
                var title = $(this).text();
                if (!$(this).hasClass(""hide-search"")) {
                    $(this).html('<input type=""text"" placeholder=""Cerca ' + title + '"" />');
                    $('input', this).on('keyup change', function () {
                        if (table.column(i).search() !== this.value) {
                            table
                                .column(i)
                                .search(this.value)
                                .draw();
                        }
                    });
                }
            });
            table = $('#vettori').DataTable({
                ajax: url,
                dom: 'Bfrtip',//dom: 'Bftp',
                buttons: [
                    'copyHtml5',
                    'excelHtml5',
                    'csvHtml5',
                    'pdfHtml5'
                ],
                ""columns"": [
              ");
                WriteLiteral(@"      { ""data"": ""progetto"" },
                    { ""data"": ""name"" },
                    { ""data"": ""description"" },
                    {
                        ""data"": null,
                        ""name"": """",
                        ""render"": function (data, type, row) {
                            return row.vettori.length;
                        }
                    },
                    {
                        ""data"": null,
                        ""name"": """",
                        ""render"": function (data, type, row) {
                            var html = """";
                            /*
                            for (i = 0; i < row.vettori.length; i++) {
                                html += ""<a class=\""targa\"" onclick=\""openModal('"" + row.id + ""','"" + row.name + ""','"" + row.vettori[i].vettoreId + ""');\"">""
                                    + row.vettori[i].targa + ""</a>"";

                            }
                            */
                            html += "" <a onclick=\""o");
                WriteLiteral(@"penModal('"" + row.id + ""','"" + row.name + ""');\"">""
                                + ""<i class='fa fa-plus'></i><i class='fa fa-car'></i>"" + ""</a>"";
                            
                            return html;
                        }
                    },
                    {
                        ""className"": 'details-control',
                        ""orderable"": false,
                        ""data"": null,
                        ""defaultContent"": '',
                        ""name"": ""cc"",
                        ""render"": function (data, type, row) {
                            if (row.vettori.length > 0)
                                return '<a><i class=""fa fa-eye""></i></a>';
                            return """";
                        }
                    },
                ],
                columnDefs: [
                    //{ width: '50px', targets: 0 },
                    //  { width: '60px', targets: 5 },
                    //  { targets: 2,render: $.fn.dataTable.render.moment");
                WriteLiteral(@"('Do MMM YYYY') }
                ],
                ""language"": {
                    ""sEmptyTable"": ""Nessun dato presente nella tabella"",
                    ""sInfo"": ""Vista da _START_ a _END_ di _TOTAL_ elementi"",
                    ""sInfoEmpty"": ""Vista da 0 a 0 di 0 elementi"",
                    ""sInfoFiltered"": ""(filtrati da _MAX_ elementi totali)"",
                    ""sInfoPostFix"": """",
                    ""sInfoThousands"": ""."",
                    ""sLengthMenu"": ""Visualizza _MENU_ elementi"",
                    ""sLoadingRecords"": ""Caricamento..."",
                    ""sProcessing"": ""Elaborazione..."",
                    ""sSearch"": ""Cerca:"",
                    ""sZeroRecords"": ""La ricerca non ha portato alcun risultato."",
                    ""oPaginate"": {
                        ""sFirst"": ""Inizio"",
                        ""sPrevious"": ""Precedente"",
                        ""sNext"": ""Successivo"",
                        ""sLast"": ""Fine""
                    },
                    ""oAria"": {
            ");
                WriteLiteral(@"            ""sSortAscending"": "": attiva per ordinare la colonna in ordine crescente"",
                        ""sSortDescending"": "": attiva per ordinare la colonna in ordine decrescente""
                    }
                },
                initComplete: function () {
                    // Apply the search
                    this.api().columns().every(function () {
                        var that = this;
                        $('input', this.header()).on('keyup change clear', function () {
                            if (that.search() !== this.value) {
                                that
                                    .search(this.value)
                                    .draw();
                            }
                        });
                    });
                },
                ""paging"": true,
                ""autoWidth"": false,
                ""responsive"": true,
                orderCellsTop: true,
                fixedHeader: true
            });

            table.off('clic");
                WriteLiteral(@"k', 'td.details-control');            
            table.on('click', 'td.details-control', function () {
                var tr = $(this).closest('tr');
                var row = table.row(tr);

                console.log(row.data());
                console.log(row.data().vettori.length);

                if (row.data().vettori.length > 0) {
                    if (row.child.isShown()) {
                        row.child.hide();
                        tr.removeClass('shown');
                    }
                    else {
                        // Open this row
                        row.child(format(row.data())).show();
                        tr.addClass('shown');
                    }
                }


            });
            
        
        }



        $(document).ready(function () {
            $('.select2-uservettore').select2({
                placeholder: ""Inserisci la targa"",
                minimumInputLength: 3,
                ajax: {
                    url: '/Vettore/ajaxVettoreC");
                WriteLiteral(@"antiere',
                    dataType: 'json',
                },
            });

            $('#assignVettoreUserForm').on(""submit"", function (e) {
                e.preventDefault(); // cancel the actual submit
                var elements = $(this).serializeArray();
                var data = [];
                jQuery.each(elements, function (i, elem) {
                    data[elem.name] = elem.value;
                });
                $.ajax({
                    url: '/Vettore/ajaxVettoreCantiereAssign',
                    type: 'post',
                    data: { CantiereId: data['UserId'], CodiceVettore: data['CodiceVettore'], WorkDate: data['workdate'] },
                    success: function (data) {
                        console.log(data.data);

                        // Add response in Modal body
                        //Svuoto modale
                        var empModal = $('#empModal');
                        empModal.find("".modal-header .modal-title"").html("""");//.html(data.data.nomeO");
                WriteLiteral(@"peratore);
                        $("".select2-uservettore"").select2(""val"", """"); //svuoto valore selezionato
                        $('#empModal').modal('hide');

                        reloadTable();
                    }
                });
            });
            $('#vettori thead tr').clone(true).appendTo('#vettori thead');
            $('#vettori thead tr:eq(1) th').each(function (i) {
                var title = $(this).text();
                if (!$(this).hasClass(""hide-search"")) {
                    $(this).html('<input type=""text"" placeholder=""Cerca ' + title + '"" />');
                    $('input', this).on('keyup change', function () {
                        if (table.column(i).search() !== this.value) {
                            table
                                .column(i)
                                .search(this.value)
                                .draw();
                        }
                    });
                }
            });

            reloadTable();

       ");
                WriteLiteral(" });\n\n\n    </script>\n\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<TimeSheet>> Html { get; private set; }
    }
}
#pragma warning restore 1591
